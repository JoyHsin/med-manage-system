[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------< [0;36morg.me.joy:clinic-management-system[0;1m >-----------------[m
[[1;34mINFO[m] [1mBuilding Clinic Management System 1.0-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m>>> [0;32mspring-boot-maven-plugin:3.2.0:run[m [1m(default-cli)[0;1m > [0;1mtest-compile[m @ [36mclinic-management-system[0;1m >>>[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:resources[m [1m(default-resources)[m @ [36mclinic-management-system[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] Copying 27 resources from src/main/resources to target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.11.0:compile[m [1m(default-compile)[m @ [36mclinic-management-system[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module! :source
[[1;34mINFO[m] Compiling 167 source files with javac [debug release 17] to target/classes
[[1;34mINFO[m] /Users/joyhsin/work/codes/med-manage-system/src/main/java/org/me/joy/clinic/entity/VitalSigns.java: 某些输入文件使用或覆盖了已过时的 API。
[[1;34mINFO[m] /Users/joyhsin/work/codes/med-manage-system/src/main/java/org/me/joy/clinic/entity/VitalSigns.java: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:testResources[m [1m(default-testResources)[m @ [36mclinic-management-system[0;1m ---[m
[[1;34mINFO[m] Copying 2 resources from src/test/resources to target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.11.0:testCompile[m [1m(default-testCompile)[m @ [36mclinic-management-system[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module! :dependency
[[1;34mINFO[m] Compiling 45 source files with javac [debug release 17] to target/test-classes
[[1;34mINFO[m] /Users/joyhsin/work/codes/med-manage-system/src/test/java/org/me/joy/clinic/service/impl/StockManagementServiceImplTest.java: 某些输入文件使用了未经检查或不安全的操作。
[[1;34mINFO[m] /Users/joyhsin/work/codes/med-manage-system/src/test/java/org/me/joy/clinic/service/impl/StockManagementServiceImplTest.java: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m<<< [0;32mspring-boot-maven-plugin:3.2.0:run[m [1m(default-cli)[0;1m < [0;1mtest-compile[m @ [36mclinic-management-system[0;1m <<<[m
[[1;34mINFO[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:3.2.0:run[m [1m(default-cli)[m @ [36mclinic-management-system[0;1m ---[m
[[1;34mINFO[m] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-08-03 21:38:05 - Starting ClinicManagementSystemApplication using Java 17.0.15 with PID 83258 (/Users/joyhsin/work/codes/med-manage-system/target/classes started by joyhsin in /Users/joyhsin/work/codes/med-manage-system)
2025-08-03 21:38:05 - No active profile set, falling back to 1 default profile: "default"
2025-08-03 21:38:05 - Tomcat initialized with port 8080 (http)
2025-08-03 21:38:05 - Starting service [Tomcat]
2025-08-03 21:38:05 - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-08-03 21:38:05 - Initializing Spring embedded WebApplicationContext
2025-08-03 21:38:05 - Root WebApplicationContext: initialization completed in 433 ms
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.PermissionMapper.findAllEnabled] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.PermissionMapper.findByModule] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.PermissionMapper.findPermissionsByUserId] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.PermissionMapper.findByModuleAndEnabled] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.RoleMapper.findByRoleCodeIgnoreCase] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.RoleMapper.findByIsSystemRoleTrue] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.RolePermissionMapper.removeAllRolePermissions] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.RolePermissionMapper.findPermissionsByRoleId] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.RolePermissionMapper.countRolePermission] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.RolePermissionMapper.addRolePermission] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.RolePermissionMapper.removeRolePermission] is ignored, because it exists, maybe from xml file
2025-08-03 21:38:05 - mapper[org.me.joy.clinic.mapper.UserMapper.findByRoleId] is ignored, because it exists, maybe from xml file
 _ _   |_  _ _|_. ___ _ |    _ 
| | |\/|_)(_| | |_\  |_)||_|_\ 
     /               |         
                        3.5.5 
2025-08-03 21:38:05 - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 21:38:06 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@27438750, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39851c5, org.springframework.security.web.context.SecurityContextHolderFilter@314f59b, org.springframework.security.web.header.HeaderWriterFilter@734f8317, org.springframework.web.filter.CorsFilter@2c7ad4f3, org.springframework.security.web.authentication.logout.LogoutFilter@7d088813, org.me.joy.clinic.security.JwtAuthenticationFilter@f5bf288, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4403bff8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49986178, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@698f4aa, org.springframework.security.web.session.SessionManagementFilter@4bdb04c8, org.springframework.security.web.access.ExceptionTranslationFilter@2913ca3e, org.springframework.security.web.access.intercept.AuthorizationFilter@1cc708a7]
2025-08-03 21:38:06 - Tomcat started on port 8080 (http) with context path '/api'
2025-08-03 21:38:06 - Started ClinicManagementSystemApplication in 1.243 seconds (process running for 1.337)
2025-08-03 21:38:38 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 21:38:38 - Initializing Servlet 'dispatcherServlet'
2025-08-03 21:38:38 - Completed initialization in 1 ms
2025-08-03 21:38:38 - Securing POST /auth/login
2025-08-03 21:38:38 - JWT令牌不以Bearer字符串开头
2025-08-03 21:38:38 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:38:38 - Cache miss for REQUEST dispatch to '/api/auth/login' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-08-03 21:38:38 - Secured POST /auth/login
2025-08-03 21:38:38 - 收到登录请求: admin
2025-08-03 21:38:38 - HikariPool-1 - Starting...
2025-08-03 21:38:38 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@511513c8
2025-08-03 21:38:38 - HikariPool-1 - Start completed.
2025-08-03 21:38:38 - 用户登录尝试: admin
2025-08-03 21:38:38 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:38:38 - ==> Parameters: admin(String)
2025-08-03 21:38:38 - <==      Total: 1
2025-08-03 21:38:38 - Authenticated user
2025-08-03 21:38:38 - 创建用户会话: username=admin, expirationTime=2025-08-03T22:08:38.495909
2025-08-03 21:38:38 - 用户会话创建成功: admin
2025-08-03 21:38:38 - ==>  Preparing: UPDATE users SET username=?, password=?, full_name=?, email=?, department=?, position=?, enabled=?, account_non_expired=?, account_non_locked=?, credentials_non_expired=?, last_login_time=?, last_login_ip=?, password_changed_time=?, failed_login_attempts=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 21:38:38 - ==> Parameters: admin(String), $2a$10$sBnVfcrUZJ4QoDbl.bqkM.TqDWy8MW.i5FU.vgnIZwnwapgdkHynC(String), 系统管理员(String), admin@clinic.com(String), IT部门(String), 系统管理员(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2025-08-03T21:38:38.496211(LocalDateTime), 127.0.0.1(String), 2025-08-02T10:43:28(LocalDateTime), 0(Integer), 2025-08-02T10:00:28(LocalDateTime), 2025-08-02T10:41:23(LocalDateTime), 1(Long)
2025-08-03 21:38:38 - <==    Updates: 1
2025-08-03 21:38:38 - 用户登录成功: admin
2025-08-03 21:38:38 - 用户登录成功: admin
2025-08-03 21:39:01 - Securing GET /patients
2025-08-03 21:39:01 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:39:01 - ==> Parameters: admin(String)
2025-08-03 21:39:01 - <==      Total: 1
2025-08-03 21:39:01 - Secured GET /patients
2025-08-03 21:39:01 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:39:01 - 获取用户权限: 1
2025-08-03 21:39:01 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:39:01 - ==> Parameters: 1(Long)
2025-08-03 21:39:01 - <==      Total: 59
2025-08-03 21:39:01 - 权限验证通过
2025-08-03 21:39:01 - 获取所有患者列表
2025-08-03 21:39:01 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:39:01 - ==> Parameters: 
2025-08-03 21:39:01 - <==      Total: 0
2025-08-03 21:39:20 - Securing GET /roles
2025-08-03 21:39:20 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:39:20 - ==> Parameters: admin(String)
2025-08-03 21:39:20 - <==      Total: 1
2025-08-03 21:39:20 - Secured GET /roles
2025-08-03 21:39:20 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 21:39:20 - 获取用户权限: 1
2025-08-03 21:39:20 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:39:20 - ==> Parameters: 1(Long)
2025-08-03 21:39:20 - <==      Total: 59
2025-08-03 21:39:20 - 权限验证通过
2025-08-03 21:39:20 - 获取所有角色
2025-08-03 21:39:20 - 获取所有角色
2025-08-03 21:39:20 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 21:39:20 - ==> Parameters: 
2025-08-03 21:39:20 - <==      Total: 6
2025-08-03 21:40:50 - Securing GET /auth/validate
2025-08-03 21:40:50 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:40:50 - ==> Parameters: admin(String)
2025-08-03 21:40:50 - <==      Total: 1
2025-08-03 21:40:50 - 会话不存在: eyJhbGciOi...
2025-08-03 21:40:50 - 会话不存在: eyJhbGciOi...
2025-08-03 21:40:50 - 会话已过期，用户: admin
2025-08-03 21:40:50 - Securing GET /auth/validate
2025-08-03 21:40:50 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:40:50 - ==> Parameters: admin(String)
2025-08-03 21:40:50 - <==      Total: 1
2025-08-03 21:40:50 - 会话不存在: eyJhbGciOi...
2025-08-03 21:40:50 - 会话不存在: eyJhbGciOi...
2025-08-03 21:40:50 - 会话已过期，用户: admin
2025-08-03 21:40:56 - Securing POST /auth/login
2025-08-03 21:40:56 - JWT令牌不以Bearer字符串开头
2025-08-03 21:40:56 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:40:56 - Secured POST /auth/login
2025-08-03 21:40:56 - 收到登录请求: admin
2025-08-03 21:40:56 - 用户登录尝试: admin
2025-08-03 21:40:56 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:40:56 - ==> Parameters: admin(String)
2025-08-03 21:40:56 - <==      Total: 1
2025-08-03 21:40:56 - Authenticated user
2025-08-03 21:40:56 - 创建用户会话: username=admin, expirationTime=2025-08-03T22:10:56.827156
2025-08-03 21:40:56 - 用户会话创建成功: admin
2025-08-03 21:40:56 - ==>  Preparing: UPDATE users SET username=?, password=?, full_name=?, email=?, department=?, position=?, enabled=?, account_non_expired=?, account_non_locked=?, credentials_non_expired=?, last_login_time=?, last_login_ip=?, password_changed_time=?, failed_login_attempts=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 21:40:56 - ==> Parameters: admin(String), $2a$10$sBnVfcrUZJ4QoDbl.bqkM.TqDWy8MW.i5FU.vgnIZwnwapgdkHynC(String), 系统管理员(String), admin@clinic.com(String), IT部门(String), 系统管理员(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2025-08-03T21:40:56.827227(LocalDateTime), 127.0.0.1(String), 2025-08-02T10:43:28(LocalDateTime), 0(Integer), 2025-08-02T10:00:28(LocalDateTime), 2025-08-02T10:41:23(LocalDateTime), 1(Long)
2025-08-03 21:40:56 - <==    Updates: 1
2025-08-03 21:40:56 - 用户登录成功: admin
2025-08-03 21:40:56 - 用户登录成功: admin
2025-08-03 21:40:56 - Securing GET /auth/me
2025-08-03 21:40:56 - JWT令牌不以Bearer字符串开头
2025-08-03 21:40:56 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:40:56 - Secured GET /auth/me
2025-08-03 21:41:04 - Securing GET /roles/enabled
2025-08-03 21:41:04 - Securing GET /users
2025-08-03 21:41:04 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:41:04 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:41:04 - ==> Parameters: admin(String)
2025-08-03 21:41:04 - ==> Parameters: admin(String)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - Secured GET /roles/enabled
2025-08-03 21:41:04 - Secured GET /users
2025-08-03 21:41:04 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 21:41:04 - 获取用户权限: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:41:04 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - 获取用户权限: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - <==      Total: 59
2025-08-03 21:41:04 - 权限验证通过
2025-08-03 21:41:04 - 获取所有启用的角色
2025-08-03 21:41:04 - 获取所有启用的角色
2025-08-03 21:41:04 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 21:41:04 - ==> Parameters: 
2025-08-03 21:41:04 - <==      Total: 59
2025-08-03 21:41:04 - 权限验证通过
2025-08-03 21:41:04 - <==      Total: 6
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 21:41:04 - ==> Parameters: 
2025-08-03 21:41:04 - <==      Total: 3
2025-08-03 21:41:04 - Securing GET /roles/enabled
2025-08-03 21:41:04 - 获取用户角色: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 21:41:04 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:41:04 - ==> Parameters: admin(String)
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - <==      Total: 2
2025-08-03 21:41:04 - 获取用户角色: 2
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 21:41:04 - Secured GET /roles/enabled
2025-08-03 21:41:04 - ==> Parameters: 2(Long)
2025-08-03 21:41:04 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 21:41:04 - 获取用户权限: 1
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:41:04 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - ==> Parameters: 2(Long)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - 获取用户角色: 3
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 21:41:04 - ==> Parameters: 3(Long)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 21:41:04 - <==      Total: 59
2025-08-03 21:41:04 - ==> Parameters: 3(Long)
2025-08-03 21:41:04 - 权限验证通过
2025-08-03 21:41:04 - 获取所有启用的角色
2025-08-03 21:41:04 - <==      Total: 0
2025-08-03 21:41:04 - 获取所有启用的角色
2025-08-03 21:41:04 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 21:41:04 - ==> Parameters: 
2025-08-03 21:41:04 - Securing GET /users
2025-08-03 21:41:04 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:41:04 - ==> Parameters: admin(String)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - Secured GET /users
2025-08-03 21:41:04 - <==      Total: 6
2025-08-03 21:41:04 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 21:41:04 - 获取用户权限: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - <==      Total: 59
2025-08-03 21:41:04 - 权限验证通过
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 21:41:04 - ==> Parameters: 
2025-08-03 21:41:04 - <==      Total: 3
2025-08-03 21:41:04 - 获取用户角色: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 21:41:04 - ==> Parameters: 1(Long)
2025-08-03 21:41:04 - <==      Total: 2
2025-08-03 21:41:04 - 获取用户角色: 2
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 21:41:04 - ==> Parameters: 2(Long)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 21:41:04 - ==> Parameters: 2(Long)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - 获取用户角色: 3
2025-08-03 21:41:04 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 21:41:04 - ==> Parameters: 3(Long)
2025-08-03 21:41:04 - <==      Total: 1
2025-08-03 21:41:04 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 21:41:04 - ==> Parameters: 3(Long)
2025-08-03 21:41:04 - <==      Total: 0
2025-08-03 21:41:07 - Securing GET /roles
2025-08-03 21:41:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:41:07 - ==> Parameters: admin(String)
2025-08-03 21:41:07 - <==      Total: 1
2025-08-03 21:41:07 - Secured GET /roles
2025-08-03 21:41:07 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 21:41:07 - 获取用户权限: 1
2025-08-03 21:41:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:41:07 - ==> Parameters: 1(Long)
2025-08-03 21:41:07 - <==      Total: 59
2025-08-03 21:41:07 - 权限验证通过
2025-08-03 21:41:07 - 获取所有角色
2025-08-03 21:41:07 - 获取所有角色
2025-08-03 21:41:07 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 21:41:07 - ==> Parameters: 
2025-08-03 21:41:07 - <==      Total: 6
2025-08-03 21:41:07 - Securing GET /roles
2025-08-03 21:41:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:41:07 - ==> Parameters: admin(String)
2025-08-03 21:41:07 - <==      Total: 1
2025-08-03 21:41:07 - Secured GET /roles
2025-08-03 21:41:07 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 21:41:07 - 获取用户权限: 1
2025-08-03 21:41:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:41:07 - ==> Parameters: 1(Long)
2025-08-03 21:41:07 - <==      Total: 59
2025-08-03 21:41:07 - 权限验证通过
2025-08-03 21:41:07 - 获取所有角色
2025-08-03 21:41:07 - 获取所有角色
2025-08-03 21:41:07 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 21:41:07 - ==> Parameters: 
2025-08-03 21:41:07 - <==      Total: 6
2025-08-03 21:42:51 - Securing POST /roles
2025-08-03 21:42:51 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:42:51 - ==> Parameters: admin(String)
2025-08-03 21:42:51 - <==      Total: 1
2025-08-03 21:42:51 - Secured POST /roles
2025-08-03 21:42:51 - 检查权限: ROLE_CREATE (逻辑: OR)
2025-08-03 21:42:51 - 获取用户权限: 1
2025-08-03 21:42:51 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:42:51 - ==> Parameters: 1(Long)
2025-08-03 21:42:51 - <==      Total: 59
2025-08-03 21:42:51 - 权限验证通过
2025-08-03 21:42:51 - 创建新角色: aaa
2025-08-03 21:42:51 - 创建新角色: aaa
2025-08-03 21:42:51 - ==>  Preparing: SELECT * FROM roles WHERE role_code = ? AND deleted = 0
2025-08-03 21:42:51 - ==> Parameters: aaa(String)
2025-08-03 21:42:51 - <==      Total: 0
2025-08-03 21:42:51 - ==>  Preparing: INSERT INTO roles ( role_code, role_name, description, enabled, is_system_role, created_at, updated_at, deleted ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-08-03 21:42:51 - ==> Parameters: aaa(String), 啊啊啊(String), aaa(String), true(Boolean), false(Boolean), 2025-08-03T21:42:51.452982(LocalDateTime), 2025-08-03T21:42:51.453110(LocalDateTime), false(Boolean)
2025-08-03 21:42:51 - <==    Updates: 1
2025-08-03 21:42:51 - 角色创建成功: 10
2025-08-03 21:42:51 - Securing GET /roles
2025-08-03 21:42:51 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:42:51 - ==> Parameters: admin(String)
2025-08-03 21:42:51 - <==      Total: 1
2025-08-03 21:42:51 - Secured GET /roles
2025-08-03 21:42:51 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 21:42:51 - 获取用户权限: 1
2025-08-03 21:42:51 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:42:51 - ==> Parameters: 1(Long)
2025-08-03 21:42:51 - <==      Total: 59
2025-08-03 21:42:51 - 权限验证通过
2025-08-03 21:42:51 - 获取所有角色
2025-08-03 21:42:51 - 获取所有角色
2025-08-03 21:42:51 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 21:42:51 - ==> Parameters: 
2025-08-03 21:42:51 - <==      Total: 7
2025-08-03 21:43:07 - Securing OPTIONS /roles/10
2025-08-03 21:43:07 - Securing PUT /roles/10
2025-08-03 21:43:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:43:07 - ==> Parameters: admin(String)
2025-08-03 21:43:07 - <==      Total: 1
2025-08-03 21:43:07 - Secured PUT /roles/10
2025-08-03 21:43:07 - 检查权限: ROLE_UPDATE (逻辑: OR)
2025-08-03 21:43:07 - 获取用户权限: 1
2025-08-03 21:43:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:43:07 - ==> Parameters: 1(Long)
2025-08-03 21:43:07 - <==      Total: 59
2025-08-03 21:43:07 - 权限验证通过
2025-08-03 21:43:07 - 更新角色: 10
2025-08-03 21:43:07 - 更新角色: 10
2025-08-03 21:43:07 - 根据ID获取角色: 10
2025-08-03 21:43:07 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE id=? AND deleted=0
2025-08-03 21:43:07 - ==> Parameters: 10(Long)
2025-08-03 21:43:07 - <==      Total: 1
2025-08-03 21:43:07 - ==>  Preparing: UPDATE roles SET role_code=?, role_name=?, description=?, enabled=?, is_system_role=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 21:43:07 - ==> Parameters: aaa(String), 啊啊啊a(String), aaa(String), true(Boolean), false(Boolean), 2025-08-03T21:42:51(LocalDateTime), 2025-08-03T21:42:51(LocalDateTime), 10(Long)
2025-08-03 21:43:07 - <==    Updates: 1
2025-08-03 21:43:07 - 角色更新成功: 10
2025-08-03 21:43:07 - Securing GET /roles
2025-08-03 21:43:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:43:07 - ==> Parameters: admin(String)
2025-08-03 21:43:07 - <==      Total: 1
2025-08-03 21:43:07 - Secured GET /roles
2025-08-03 21:43:07 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 21:43:07 - 获取用户权限: 1
2025-08-03 21:43:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:43:07 - ==> Parameters: 1(Long)
2025-08-03 21:43:07 - <==      Total: 59
2025-08-03 21:43:07 - 权限验证通过
2025-08-03 21:43:07 - 获取所有角色
2025-08-03 21:43:07 - 获取所有角色
2025-08-03 21:43:07 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 21:43:07 - ==> Parameters: 
2025-08-03 21:43:07 - <==      Total: 7
2025-08-03 21:43:17 - Securing GET /patients
2025-08-03 21:43:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:43:17 - ==> Parameters: admin(String)
2025-08-03 21:43:17 - <==      Total: 1
2025-08-03 21:43:17 - Secured GET /patients
2025-08-03 21:43:17 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:43:17 - 获取用户权限: 1
2025-08-03 21:43:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:43:17 - ==> Parameters: 1(Long)
2025-08-03 21:43:17 - <==      Total: 59
2025-08-03 21:43:17 - 权限验证通过
2025-08-03 21:43:17 - 获取所有患者列表
2025-08-03 21:43:17 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:43:17 - ==> Parameters: 
2025-08-03 21:43:17 - <==      Total: 0
2025-08-03 21:43:17 - Securing GET /patients
2025-08-03 21:43:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:43:17 - ==> Parameters: admin(String)
2025-08-03 21:43:17 - <==      Total: 1
2025-08-03 21:43:17 - Secured GET /patients
2025-08-03 21:43:17 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:43:17 - 获取用户权限: 1
2025-08-03 21:43:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:43:17 - ==> Parameters: 1(Long)
2025-08-03 21:43:17 - <==      Total: 59
2025-08-03 21:43:17 - 权限验证通过
2025-08-03 21:43:17 - 获取所有患者列表
2025-08-03 21:43:17 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:43:17 - ==> Parameters: 
2025-08-03 21:43:17 - <==      Total: 0
2025-08-03 21:44:39 - Securing OPTIONS /patients
2025-08-03 21:44:39 - Securing POST /patients
2025-08-03 21:44:39 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:44:39 - ==> Parameters: admin(String)
2025-08-03 21:44:39 - <==      Total: 1
2025-08-03 21:44:39 - Secured POST /patients
2025-08-03 21:44:39 - 检查权限: PATIENT_CREATE (逻辑: OR)
2025-08-03 21:44:39 - 获取用户权限: 1
2025-08-03 21:44:39 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:44:39 - ==> Parameters: 1(Long)
2025-08-03 21:44:39 - <==      Total: 59
2025-08-03 21:44:39 - 权限验证通过
2025-08-03 21:44:39 - 创建患者请求: Joy
2025-08-03 21:44:39 - 创建新患者: Joy
2025-08-03 21:44:39 - ==>  Preparing: SELECT * FROM patients WHERE id_card = ? AND deleted = 0
2025-08-03 21:44:39 - ==> Parameters: 360782200108161234(String)
2025-08-03 21:44:39 - <==      Total: 0
2025-08-03 21:44:39 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 21:44:39 - ==> Parameters: P202508030001(String)
2025-08-03 21:44:39 - <==      Total: 0
2025-08-03 21:44:39 - ==>  Preparing: INSERT INTO patients ( patient_number, name, phone, id_card, birth_date, gender, address, emergency_contact_name, emergency_contact_phone, emergency_contact_relation, blood_type, marital_status, occupation, ethnicity, insurance_type, insurance_number, remarks, is_vip, status, visit_count, created_at, updated_at, deleted ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-08-03 21:44:39 - ==> Parameters: P202508030001(String), Joy(String), 13307981234(String), 360782200108161234(String), 2001-08-16(LocalDate), 男(String), 棠下街道棠东村凌角大街25号(String), Joy(String), 13397981561(String), fuzi(String), A+(String), 未婚(String), ces(String), 汉族(String), 职工医保(String), 13354656757(String), dvcfdsbvdfb(String), true(Boolean), 正常(String), 0(Integer), 2025-08-03T21:44:39.871096(LocalDateTime), 2025-08-03T21:44:39.871118(LocalDateTime), false(Boolean)
2025-08-03 21:44:39 - <==    Updates: 1
2025-08-03 21:44:39 - 患者创建成功: Joy, ID: 1
2025-08-03 21:44:39 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:44:39 - ==> Parameters: 1(Long)
2025-08-03 21:44:39 - <==      Total: 0
2025-08-03 21:44:39 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:44:39 - ==> Parameters: 1(Long)
2025-08-03 21:44:39 - <==      Total: 0
2025-08-03 21:44:39 - 患者创建成功: 1
2025-08-03 21:45:05 - Securing GET /patients
2025-08-03 21:45:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:45:05 - ==> Parameters: admin(String)
2025-08-03 21:45:05 - <==      Total: 1
2025-08-03 21:45:05 - Secured GET /patients
2025-08-03 21:45:05 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:45:05 - 获取用户权限: 1
2025-08-03 21:45:05 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:45:05 - ==> Parameters: 1(Long)
2025-08-03 21:45:05 - <==      Total: 59
2025-08-03 21:45:05 - 权限验证通过
2025-08-03 21:45:05 - 获取所有患者列表
2025-08-03 21:45:05 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:45:05 - ==> Parameters: 
2025-08-03 21:45:05 - <==      Total: 1
2025-08-03 21:45:05 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:45:05 - ==> Parameters: 1(Long)
2025-08-03 21:45:05 - <==      Total: 0
2025-08-03 21:45:05 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:45:05 - ==> Parameters: 1(Long)
2025-08-03 21:45:05 - <==      Total: 0
2025-08-03 21:45:29 - Securing GET /api/inventory/medicines
2025-08-03 21:45:29 - Securing GET /api/inventory/statistics
2025-08-03 21:45:29 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:45:29 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:45:29 - ==> Parameters: admin(String)
2025-08-03 21:45:29 - ==> Parameters: admin(String)
2025-08-03 21:45:29 - <==      Total: 1
2025-08-03 21:45:29 - <==      Total: 1
2025-08-03 21:45:29 - Secured GET /api/inventory/statistics
2025-08-03 21:45:29 - Secured GET /api/inventory/medicines
2025-08-03 21:45:29 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/inventory/statistics.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:45:29 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/inventory/medicines.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:45:29 - Securing GET /api/inventory/statistics
2025-08-03 21:45:29 - Securing GET /api/inventory/medicines
2025-08-03 21:45:29 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:45:29 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:45:29 - ==> Parameters: admin(String)
2025-08-03 21:45:29 - ==> Parameters: admin(String)
2025-08-03 21:45:29 - <==      Total: 1
2025-08-03 21:45:29 - <==      Total: 1
2025-08-03 21:45:29 - Secured GET /api/inventory/statistics
2025-08-03 21:45:29 - Secured GET /api/inventory/medicines
2025-08-03 21:45:29 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/inventory/medicines.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:45:29 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/inventory/statistics.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:05 - Securing GET /appointments
2025-08-03 21:46:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:05 - ==> Parameters: admin(String)
2025-08-03 21:46:05 - <==      Total: 1
2025-08-03 21:46:05 - Secured GET /appointments
2025-08-03 21:46:05 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:05 - Securing GET /appointments
2025-08-03 21:46:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:05 - ==> Parameters: admin(String)
2025-08-03 21:46:05 - <==      Total: 1
2025-08-03 21:46:05 - Secured GET /appointments
2025-08-03 21:46:05 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:05 - Securing GET /appointments
2025-08-03 21:46:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:05 - ==> Parameters: admin(String)
2025-08-03 21:46:05 - <==      Total: 1
2025-08-03 21:46:05 - Secured GET /appointments
2025-08-03 21:46:05 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:05 - Securing GET /appointments
2025-08-03 21:46:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:05 - ==> Parameters: admin(String)
2025-08-03 21:46:05 - <==      Total: 1
2025-08-03 21:46:05 - Secured GET /appointments
2025-08-03 21:46:05 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:07 - Securing GET /registrations
2025-08-03 21:46:07 - Securing GET /patients
2025-08-03 21:46:07 - Securing GET /registrations/statistics
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - Secured GET /patients
2025-08-03 21:46:07 - Secured GET /registrations/statistics
2025-08-03 21:46:07 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:07 - Secured GET /registrations
2025-08-03 21:46:07 - 获取用户权限: 1
2025-08-03 21:46:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT COUNT(*) FROM registrations WHERE registration_date = ? AND deleted = 0
2025-08-03 21:46:07 - ==> Parameters: 1(Long)
2025-08-03 21:46:07 - ==> Parameters: 2025-08-03(LocalDate)
2025-08-03 21:46:07 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:07 - Securing GET /registrations
2025-08-03 21:46:07 - <==      Total: 59
2025-08-03 21:46:07 - 权限验证通过
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - 获取所有患者列表
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:07 - Secured GET /registrations
2025-08-03 21:46:07 - ==> Parameters: 1(Long)
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:07 - ==> Parameters: 1(Long)
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - Securing GET /patients
2025-08-03 21:46:07 - Securing GET /registrations
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - Secured GET /patients
2025-08-03 21:46:07 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:07 - 获取用户权限: 1
2025-08-03 21:46:07 - Secured GET /registrations
2025-08-03 21:46:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:07 - ==> Parameters: 1(Long)
2025-08-03 21:46:07 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:07 - Securing GET /registrations
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - Secured GET /registrations
2025-08-03 21:46:07 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:07 - <==      Total: 59
2025-08-03 21:46:07 - 权限验证通过
2025-08-03 21:46:07 - 获取所有患者列表
2025-08-03 21:46:07 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:07 - ==> Parameters: 1(Long)
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:07 - ==> Parameters: 1(Long)
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - ==>  Preparing: SELECT status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY status
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT department, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY department
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT registration_type, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY registration_type
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT payment_status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY payment_status
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已挂号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY priority DESC, queue_number ASC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已叫号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY called_at ASC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE status = '就诊中' AND registration_date = CURDATE() AND deleted = 0 ORDER BY started_at ASC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE payment_status = '未支付' AND deleted = 0 ORDER BY registration_date DESC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - Securing GET /registrations/statistics
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:07 - ==> Parameters: admin(String)
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - Secured GET /registrations/statistics
2025-08-03 21:46:07 - ==>  Preparing: SELECT COUNT(*) FROM registrations WHERE registration_date = ? AND deleted = 0
2025-08-03 21:46:07 - ==> Parameters: 2025-08-03(LocalDate)
2025-08-03 21:46:07 - <==      Total: 1
2025-08-03 21:46:07 - ==>  Preparing: SELECT status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY status
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT department, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY department
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT registration_type, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY registration_type
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT payment_status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY payment_status
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已挂号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY priority DESC, queue_number ASC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已叫号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY called_at ASC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE status = '就诊中' AND registration_date = CURDATE() AND deleted = 0 ORDER BY started_at ASC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:07 - ==>  Preparing: SELECT * FROM registrations WHERE payment_status = '未支付' AND deleted = 0 ORDER BY registration_date DESC
2025-08-03 21:46:07 - ==> Parameters: 
2025-08-03 21:46:07 - <==      Total: 0
2025-08-03 21:46:10 - Securing GET /appointments
2025-08-03 21:46:10 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:10 - ==> Parameters: admin(String)
2025-08-03 21:46:10 - <==      Total: 1
2025-08-03 21:46:10 - Secured GET /appointments
2025-08-03 21:46:10 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:10 - Securing GET /appointments
2025-08-03 21:46:10 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:10 - ==> Parameters: admin(String)
2025-08-03 21:46:10 - <==      Total: 1
2025-08-03 21:46:10 - Secured GET /appointments
2025-08-03 21:46:10 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:10 - Securing GET /appointments
2025-08-03 21:46:10 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:10 - ==> Parameters: admin(String)
2025-08-03 21:46:10 - <==      Total: 1
2025-08-03 21:46:10 - Secured GET /appointments
2025-08-03 21:46:10 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:10 - Securing GET /appointments
2025-08-03 21:46:10 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:10 - ==> Parameters: admin(String)
2025-08-03 21:46:10 - <==      Total: 1
2025-08-03 21:46:10 - Secured GET /appointments
2025-08-03 21:46:10 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:42 - Securing GET /patients
2025-08-03 21:46:42 - Securing GET /registrations/statistics
2025-08-03 21:46:42 - Securing GET /registrations
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - Secured GET /patients
2025-08-03 21:46:42 - Secured GET /registrations/statistics
2025-08-03 21:46:42 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:42 - Secured GET /registrations
2025-08-03 21:46:42 - ==>  Preparing: SELECT COUNT(*) FROM registrations WHERE registration_date = ? AND deleted = 0
2025-08-03 21:46:42 - 获取用户权限: 1
2025-08-03 21:46:42 - ==> Parameters: 2025-08-03(LocalDate)
2025-08-03 21:46:42 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:42 - ==> Parameters: 1(Long)
2025-08-03 21:46:42 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - ==>  Preparing: SELECT status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY status
2025-08-03 21:46:42 - <==      Total: 59
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - Securing GET /registrations
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - 权限验证通过
2025-08-03 21:46:42 - 获取所有患者列表
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:42 - ==>  Preparing: SELECT department, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY department
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - ==> Parameters: 1(Long)
2025-08-03 21:46:42 - Secured GET /registrations
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:42 - ==> Parameters: 1(Long)
2025-08-03 21:46:42 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:42 - ==>  Preparing: SELECT registration_type, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY registration_type
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - Securing GET /registrations
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - ==>  Preparing: SELECT payment_status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY payment_status
2025-08-03 21:46:42 - Securing GET /patients
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已挂号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY priority DESC, queue_number ASC
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - Secured GET /registrations
2025-08-03 21:46:42 - Secured GET /patients
2025-08-03 21:46:42 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:42 - 获取用户权限: 1
2025-08-03 21:46:42 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已叫号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY called_at ASC
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - ==> Parameters: 1(Long)
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - Securing GET /registrations
2025-08-03 21:46:42 - <==      Total: 59
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE status = '就诊中' AND registration_date = CURDATE() AND deleted = 0 ORDER BY started_at ASC
2025-08-03 21:46:42 - 权限验证通过
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - 获取所有患者列表
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE payment_status = '未支付' AND deleted = 0 ORDER BY registration_date DESC
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - Secured GET /registrations
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:42 - ==> Parameters: 1(Long)
2025-08-03 21:46:42 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:42 - ==> Parameters: 1(Long)
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - Securing GET /registrations/statistics
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: admin(String)
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - Secured GET /registrations/statistics
2025-08-03 21:46:42 - ==>  Preparing: SELECT COUNT(*) FROM registrations WHERE registration_date = ? AND deleted = 0
2025-08-03 21:46:42 - ==> Parameters: 2025-08-03(LocalDate)
2025-08-03 21:46:42 - <==      Total: 1
2025-08-03 21:46:42 - ==>  Preparing: SELECT status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY status
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT department, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY department
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT registration_type, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY registration_type
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT payment_status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY payment_status
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已挂号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY priority DESC, queue_number ASC
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已叫号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY called_at ASC
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE status = '就诊中' AND registration_date = CURDATE() AND deleted = 0 ORDER BY started_at ASC
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:42 - ==>  Preparing: SELECT * FROM registrations WHERE payment_status = '未支付' AND deleted = 0 ORDER BY registration_date DESC
2025-08-03 21:46:42 - ==> Parameters: 
2025-08-03 21:46:42 - <==      Total: 0
2025-08-03 21:46:55 - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/api/triage/queue?params[queueDate]=2025-08-03 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:264)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:55 - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/api/triage/queue?params[queueDate]=2025-08-03 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:264)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:46:57 - Securing GET /patients
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:57 - ==> Parameters: admin(String)
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - Secured GET /patients
2025-08-03 21:46:57 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:57 - 获取用户权限: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 59
2025-08-03 21:46:57 - 权限验证通过
2025-08-03 21:46:57 - 获取所有患者列表
2025-08-03 21:46:57 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:57 - ==> Parameters: 
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:46:57 - Securing GET /patients
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:57 - ==> Parameters: admin(String)
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - Secured GET /patients
2025-08-03 21:46:57 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:57 - 获取用户权限: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 59
2025-08-03 21:46:57 - 权限验证通过
2025-08-03 21:46:57 - 获取所有患者列表
2025-08-03 21:46:57 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:57 - ==> Parameters: 
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:46:57 - Securing GET /patients
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:57 - ==> Parameters: admin(String)
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - Secured GET /patients
2025-08-03 21:46:57 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:57 - 获取用户权限: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 59
2025-08-03 21:46:57 - 权限验证通过
2025-08-03 21:46:57 - 获取所有患者列表
2025-08-03 21:46:57 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:57 - ==> Parameters: 
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:46:57 - Securing GET /patients
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:46:57 - ==> Parameters: admin(String)
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - Secured GET /patients
2025-08-03 21:46:57 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:46:57 - 获取用户权限: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 59
2025-08-03 21:46:57 - 权限验证通过
2025-08-03 21:46:57 - 获取所有患者列表
2025-08-03 21:46:57 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:46:57 - ==> Parameters: 
2025-08-03 21:46:57 - <==      Total: 1
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:46:57 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:46:57 - ==> Parameters: 1(Long)
2025-08-03 21:46:57 - <==      Total: 0
2025-08-03 21:47:01 - Securing GET /patients
2025-08-03 21:47:01 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:01 - ==> Parameters: admin(String)
2025-08-03 21:47:01 - <==      Total: 1
2025-08-03 21:47:01 - Secured GET /patients
2025-08-03 21:47:01 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:01 - 获取用户权限: 1
2025-08-03 21:47:01 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:01 - ==> Parameters: 1(Long)
2025-08-03 21:47:01 - <==      Total: 59
2025-08-03 21:47:01 - 权限验证通过
2025-08-03 21:47:01 - 获取所有患者列表
2025-08-03 21:47:01 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:01 - ==> Parameters: 
2025-08-03 21:47:01 - <==      Total: 1
2025-08-03 21:47:01 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:01 - ==> Parameters: 1(Long)
2025-08-03 21:47:01 - <==      Total: 0
2025-08-03 21:47:01 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:01 - ==> Parameters: 1(Long)
2025-08-03 21:47:01 - <==      Total: 0
2025-08-03 21:47:01 - Securing GET /patients
2025-08-03 21:47:01 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:01 - ==> Parameters: admin(String)
2025-08-03 21:47:01 - <==      Total: 1
2025-08-03 21:47:01 - Secured GET /patients
2025-08-03 21:47:01 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:01 - 获取用户权限: 1
2025-08-03 21:47:01 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:01 - ==> Parameters: 1(Long)
2025-08-03 21:47:01 - <==      Total: 59
2025-08-03 21:47:01 - 权限验证通过
2025-08-03 21:47:01 - 获取所有患者列表
2025-08-03 21:47:01 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:01 - ==> Parameters: 
2025-08-03 21:47:01 - <==      Total: 1
2025-08-03 21:47:01 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:01 - ==> Parameters: 1(Long)
2025-08-03 21:47:01 - <==      Total: 0
2025-08-03 21:47:01 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:01 - ==> Parameters: 1(Long)
2025-08-03 21:47:01 - <==      Total: 0
2025-08-03 21:47:05 - Securing GET /api/medicines
2025-08-03 21:47:05 - Securing GET /patients
2025-08-03 21:47:05 - Securing GET /api/medicines/common/doctor/1
2025-08-03 21:47:05 - Securing GET /api/prescriptions/doctor/1
2025-08-03 21:47:05 - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/api/prescriptions/stats?params[doctorId]=1 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:264)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/api/prescriptions/stats?params[doctorId]=1 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:264)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - Secured GET /patients
2025-08-03 21:47:05 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:05 - Secured GET /api/medicines
2025-08-03 21:47:05 - Secured GET /api/prescriptions/doctor/1
2025-08-03 21:47:05 - Secured GET /api/medicines/common/doctor/1
2025-08-03 21:47:05 - 获取用户权限: 1
2025-08-03 21:47:05 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:05 - ==> Parameters: 1(Long)
2025-08-03 21:47:05 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/prescriptions/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medicines.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medicines/common/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - <==      Total: 59
2025-08-03 21:47:05 - Securing GET /api/prescriptions/doctor/1
2025-08-03 21:47:05 - Securing GET /api/medicines/common/doctor/1
2025-08-03 21:47:05 - Securing GET /api/medicines
2025-08-03 21:47:05 - 权限验证通过
2025-08-03 21:47:05 - 获取所有患者列表
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:05 - ==> Parameters: 
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:05 - ==> Parameters: 1(Long)
2025-08-03 21:47:05 - <==      Total: 0
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:05 - ==> Parameters: 1(Long)
2025-08-03 21:47:05 - Secured GET /api/medicines
2025-08-03 21:47:05 - Secured GET /api/prescriptions/doctor/1
2025-08-03 21:47:05 - Secured GET /api/medicines/common/doctor/1
2025-08-03 21:47:05 - <==      Total: 0
2025-08-03 21:47:05 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/prescriptions/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medicines/common/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medicines.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:05 - Securing GET /patients
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:05 - ==> Parameters: admin(String)
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - Secured GET /patients
2025-08-03 21:47:05 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:05 - 获取用户权限: 1
2025-08-03 21:47:05 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:05 - ==> Parameters: 1(Long)
2025-08-03 21:47:05 - <==      Total: 59
2025-08-03 21:47:05 - 权限验证通过
2025-08-03 21:47:05 - 获取所有患者列表
2025-08-03 21:47:05 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:05 - ==> Parameters: 
2025-08-03 21:47:05 - <==      Total: 1
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:05 - ==> Parameters: 1(Long)
2025-08-03 21:47:05 - <==      Total: 0
2025-08-03 21:47:05 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:05 - ==> Parameters: 1(Long)
2025-08-03 21:47:05 - <==      Total: 0
2025-08-03 21:47:06 - Securing OPTIONS /api/medical-orders/doctor/1
2025-08-03 21:47:06 - Securing GET /patients
2025-08-03 21:47:06 - Securing OPTIONS /api/medical-order-templates/doctor/1
2025-08-03 21:47:06 - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/api/medical-orders/stats?params[doctorId]=1 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:264)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:06 - Securing OPTIONS /api/medical-orders/doctor/1
2025-08-03 21:47:06 - Securing OPTIONS /api/medical-order-templates/doctor/1
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:06 - ==> Parameters: admin(String)
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - Secured GET /patients
2025-08-03 21:47:06 - Securing GET /api/medical-orders/doctor/1
2025-08-03 21:47:06 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:06 - Securing GET /api/medical-order-templates/doctor/1
2025-08-03 21:47:06 - 获取用户权限: 1
2025-08-03 21:47:06 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:06 - ==> Parameters: admin(String)
2025-08-03 21:47:06 - ==> Parameters: 1(Long)
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:06 - ==> Parameters: admin(String)
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - <==      Total: 59
2025-08-03 21:47:06 - Secured GET /api/medical-orders/doctor/1
2025-08-03 21:47:06 - Secured GET /api/medical-order-templates/doctor/1
2025-08-03 21:47:06 - 权限验证通过
2025-08-03 21:47:06 - 获取所有患者列表
2025-08-03 21:47:06 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:06 - ==> Parameters: 
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medical-order-templates/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:06 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medical-orders/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:06 - ==> Parameters: 1(Long)
2025-08-03 21:47:06 - <==      Total: 0
2025-08-03 21:47:06 - Securing GET /api/medical-order-templates/doctor/1
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:06 - ==> Parameters: 1(Long)
2025-08-03 21:47:06 - Securing GET /api/medical-orders/doctor/1
2025-08-03 21:47:06 - <==      Total: 0
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:06 - ==> Parameters: admin(String)
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:06 - ==> Parameters: admin(String)
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - Securing GET /patients
2025-08-03 21:47:06 - Secured GET /api/medical-order-templates/doctor/1
2025-08-03 21:47:06 - Secured GET /api/medical-orders/doctor/1
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:06 - ==> Parameters: admin(String)
2025-08-03 21:47:06 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medical-orders/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:06 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/medical-order-templates/doctor/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - Secured GET /patients
2025-08-03 21:47:06 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:06 - 获取用户权限: 1
2025-08-03 21:47:06 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:06 - ==> Parameters: 1(Long)
2025-08-03 21:47:06 - <==      Total: 59
2025-08-03 21:47:06 - 权限验证通过
2025-08-03 21:47:06 - 获取所有患者列表
2025-08-03 21:47:06 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:06 - ==> Parameters: 
2025-08-03 21:47:06 - <==      Total: 1
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:06 - ==> Parameters: 1(Long)
2025-08-03 21:47:06 - <==      Total: 0
2025-08-03 21:47:06 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:06 - ==> Parameters: 1(Long)
2025-08-03 21:47:06 - <==      Total: 0
2025-08-03 21:47:08 - Securing GET /patients
2025-08-03 21:47:08 - Securing OPTIONS /api/billing/bills/search
2025-08-03 21:47:08 - Securing OPTIONS /api/billing/stats
2025-08-03 21:47:08 - Securing OPTIONS /api/billing/bills/search
2025-08-03 21:47:08 - Securing OPTIONS /api/billing/stats
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:08 - ==> Parameters: admin(String)
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - Secured GET /patients
2025-08-03 21:47:08 - Securing GET /api/billing/bills/search
2025-08-03 21:47:08 - Securing GET /api/billing/stats
2025-08-03 21:47:08 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:08 - 获取用户权限: 1
2025-08-03 21:47:08 - ==> Parameters: admin(String)
2025-08-03 21:47:08 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:08 - ==> Parameters: 1(Long)
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:08 - ==> Parameters: admin(String)
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - <==      Total: 59
2025-08-03 21:47:08 - Secured GET /api/billing/stats
2025-08-03 21:47:08 - Secured GET /api/billing/bills/search
2025-08-03 21:47:08 - 权限验证通过
2025-08-03 21:47:08 - 获取所有患者列表
2025-08-03 21:47:08 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:08 - ==> Parameters: 
2025-08-03 21:47:08 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/billing/stats.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:08 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/billing/bills/search.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:08 - Securing GET /api/billing/bills/search
2025-08-03 21:47:08 - Securing GET /api/billing/stats
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:08 - ==> Parameters: admin(String)
2025-08-03 21:47:08 - ==> Parameters: admin(String)
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:08 - ==> Parameters: 1(Long)
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - <==      Total: 0
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:08 - ==> Parameters: 1(Long)
2025-08-03 21:47:08 - <==      Total: 0
2025-08-03 21:47:08 - Secured GET /api/billing/stats
2025-08-03 21:47:08 - Secured GET /api/billing/bills/search
2025-08-03 21:47:08 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/billing/bills/search.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:08 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/billing/stats.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:08 - Securing GET /patients
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:08 - ==> Parameters: admin(String)
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - Secured GET /patients
2025-08-03 21:47:08 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:08 - 获取用户权限: 1
2025-08-03 21:47:08 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:08 - ==> Parameters: 1(Long)
2025-08-03 21:47:08 - <==      Total: 59
2025-08-03 21:47:08 - 权限验证通过
2025-08-03 21:47:08 - 获取所有患者列表
2025-08-03 21:47:08 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:08 - ==> Parameters: 
2025-08-03 21:47:08 - <==      Total: 1
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:08 - ==> Parameters: 1(Long)
2025-08-03 21:47:08 - <==      Total: 0
2025-08-03 21:47:08 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:08 - ==> Parameters: 1(Long)
2025-08-03 21:47:08 - <==      Total: 0
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/prescriptions/pending
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/dispense/in-progress
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/dispense/ready-for-delivery
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/dispense/needing-review
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/prescriptions/pending
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/dispense/in-progress
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/dispense/ready-for-delivery
2025-08-03 21:47:11 - Securing OPTIONS /api/pharmacy/dispense/needing-review
2025-08-03 21:47:11 - Securing GET /api/pharmacy/dispense/in-progress
2025-08-03 21:47:11 - Securing GET /api/pharmacy/prescriptions/pending
2025-08-03 21:47:11 - Securing GET /api/pharmacy/dispense/ready-for-delivery
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - Securing GET /api/pharmacy/dispense/needing-review
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - Secured GET /api/pharmacy/dispense/in-progress
2025-08-03 21:47:11 - Secured GET /api/pharmacy/prescriptions/pending
2025-08-03 21:47:11 - Secured GET /api/pharmacy/dispense/ready-for-delivery
2025-08-03 21:47:11 - Secured GET /api/pharmacy/dispense/needing-review
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/dispense/ready-for-delivery.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/prescriptions/pending.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/dispense/needing-review.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/dispense/in-progress.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:11 - Securing GET /api/pharmacy/dispense/ready-for-delivery
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - Securing GET /api/pharmacy/dispense/in-progress
2025-08-03 21:47:11 - Securing GET /api/pharmacy/dispense/needing-review
2025-08-03 21:47:11 - Securing GET /api/pharmacy/prescriptions/pending
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - ==> Parameters: admin(String)
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - <==      Total: 1
2025-08-03 21:47:11 - Secured GET /api/pharmacy/prescriptions/pending
2025-08-03 21:47:11 - Secured GET /api/pharmacy/dispense/needing-review
2025-08-03 21:47:11 - Secured GET /api/pharmacy/dispense/ready-for-delivery
2025-08-03 21:47:11 - Secured GET /api/pharmacy/dispense/in-progress
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/dispense/in-progress.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/dispense/ready-for-delivery.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/dispense/needing-review.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:11 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/pharmacy/prescriptions/pending.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:17 - Securing GET /patients
2025-08-03 21:47:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:17 - ==> Parameters: admin(String)
2025-08-03 21:47:17 - <==      Total: 1
2025-08-03 21:47:17 - Secured GET /patients
2025-08-03 21:47:17 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:17 - 获取用户权限: 1
2025-08-03 21:47:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:17 - ==> Parameters: 1(Long)
2025-08-03 21:47:17 - <==      Total: 59
2025-08-03 21:47:17 - 权限验证通过
2025-08-03 21:47:17 - 获取所有患者列表
2025-08-03 21:47:17 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:17 - ==> Parameters: 
2025-08-03 21:47:17 - <==      Total: 1
2025-08-03 21:47:17 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:17 - ==> Parameters: 1(Long)
2025-08-03 21:47:17 - <==      Total: 0
2025-08-03 21:47:17 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:17 - ==> Parameters: 1(Long)
2025-08-03 21:47:17 - <==      Total: 0
2025-08-03 21:47:17 - Securing GET /patients
2025-08-03 21:47:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:17 - ==> Parameters: admin(String)
2025-08-03 21:47:17 - <==      Total: 1
2025-08-03 21:47:17 - Secured GET /patients
2025-08-03 21:47:17 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:17 - 获取用户权限: 1
2025-08-03 21:47:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:17 - ==> Parameters: 1(Long)
2025-08-03 21:47:17 - <==      Total: 59
2025-08-03 21:47:17 - 权限验证通过
2025-08-03 21:47:17 - 获取所有患者列表
2025-08-03 21:47:17 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:17 - ==> Parameters: 
2025-08-03 21:47:17 - <==      Total: 1
2025-08-03 21:47:17 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:17 - ==> Parameters: 1(Long)
2025-08-03 21:47:17 - <==      Total: 0
2025-08-03 21:47:17 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:17 - ==> Parameters: 1(Long)
2025-08-03 21:47:17 - <==      Total: 0
2025-08-03 21:47:25 - Securing GET /patients
2025-08-03 21:47:25 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:25 - ==> Parameters: admin(String)
2025-08-03 21:47:25 - <==      Total: 1
2025-08-03 21:47:25 - Secured GET /patients
2025-08-03 21:47:25 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:25 - 获取用户权限: 1
2025-08-03 21:47:25 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:25 - ==> Parameters: 1(Long)
2025-08-03 21:47:25 - <==      Total: 59
2025-08-03 21:47:25 - 权限验证通过
2025-08-03 21:47:25 - 获取所有患者列表
2025-08-03 21:47:25 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:25 - ==> Parameters: 
2025-08-03 21:47:25 - <==      Total: 1
2025-08-03 21:47:25 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:25 - ==> Parameters: 1(Long)
2025-08-03 21:47:25 - <==      Total: 0
2025-08-03 21:47:25 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:25 - ==> Parameters: 1(Long)
2025-08-03 21:47:25 - <==      Total: 0
2025-08-03 21:47:25 - Securing GET /patients
2025-08-03 21:47:25 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:25 - ==> Parameters: admin(String)
2025-08-03 21:47:25 - <==      Total: 1
2025-08-03 21:47:25 - Secured GET /patients
2025-08-03 21:47:25 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:47:25 - 获取用户权限: 1
2025-08-03 21:47:25 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:47:25 - ==> Parameters: 1(Long)
2025-08-03 21:47:25 - <==      Total: 59
2025-08-03 21:47:25 - 权限验证通过
2025-08-03 21:47:25 - 获取所有患者列表
2025-08-03 21:47:25 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:47:25 - ==> Parameters: 
2025-08-03 21:47:25 - <==      Total: 1
2025-08-03 21:47:25 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:47:25 - ==> Parameters: 1(Long)
2025-08-03 21:47:25 - <==      Total: 0
2025-08-03 21:47:25 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:47:25 - ==> Parameters: 1(Long)
2025-08-03 21:47:25 - <==      Total: 0
2025-08-03 21:47:43 - Securing OPTIONS /api/vital-signs/validate
2025-08-03 21:47:43 - Securing POST /api/vital-signs/validate
2025-08-03 21:47:43 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:43 - ==> Parameters: admin(String)
2025-08-03 21:47:43 - <==      Total: 1
2025-08-03 21:47:43 - Secured POST /api/vital-signs/validate
2025-08-03 21:47:43 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/vital-signs/validate.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:46 - Securing POST /api/vital-signs/validate
2025-08-03 21:47:46 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:46 - ==> Parameters: admin(String)
2025-08-03 21:47:46 - <==      Total: 1
2025-08-03 21:47:46 - Secured POST /api/vital-signs/validate
2025-08-03 21:47:46 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/vital-signs/validate.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:47:50 - Securing POST /api/vital-signs/validate
2025-08-03 21:47:50 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:47:50 - ==> Parameters: admin(String)
2025-08-03 21:47:50 - <==      Total: 1
2025-08-03 21:47:50 - Secured POST /api/vital-signs/validate
2025-08-03 21:47:50 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/vital-signs/validate.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 21:59:10 - Securing GET /patients
2025-08-03 21:59:10 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 21:59:10 - ==> Parameters: admin(String)
2025-08-03 21:59:10 - <==      Total: 1
2025-08-03 21:59:10 - Secured GET /patients
2025-08-03 21:59:10 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 21:59:10 - 获取用户权限: 1
2025-08-03 21:59:10 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 21:59:10 - ==> Parameters: 1(Long)
2025-08-03 21:59:10 - <==      Total: 59
2025-08-03 21:59:10 - 权限验证通过
2025-08-03 21:59:10 - 获取所有患者列表
2025-08-03 21:59:10 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 21:59:10 - ==> Parameters: 
2025-08-03 21:59:10 - <==      Total: 1
2025-08-03 21:59:10 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 21:59:10 - ==> Parameters: 1(Long)
2025-08-03 21:59:10 - <==      Total: 0
2025-08-03 21:59:10 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 21:59:10 - ==> Parameters: 1(Long)
2025-08-03 21:59:10 - <==      Total: 0
2025-08-03 22:08:49 - Securing GET /roles
2025-08-03 22:08:49 - 无法获取JWT令牌
java.lang.IllegalArgumentException: Invalid JWT token
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:68)
	at org.me.joy.clinic.security.JwtUtil.extractClaim(JwtUtil.java:53)
	at org.me.joy.clinic.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.jsonwebtoken.ExpiredJwtException: JWT expired 11475 milliseconds ago at 2025-08-03T14:08:38.000Z. Current time: 2025-08-03T14:08:49.475Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:65)
	... 58 common frames omitted
2025-08-03 22:08:49 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:08:49 - Pre-authenticated entry point called. Rejecting access
2025-08-03 22:08:49 - Securing GET /error
2025-08-03 22:08:49 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:08:49 - Pre-authenticated entry point called. Rejecting access
2025-08-03 22:09:01 - Securing GET /roles
2025-08-03 22:09:01 - 无法获取JWT令牌
java.lang.IllegalArgumentException: Invalid JWT token
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:68)
	at org.me.joy.clinic.security.JwtUtil.extractClaim(JwtUtil.java:53)
	at org.me.joy.clinic.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.jsonwebtoken.ExpiredJwtException: JWT expired 23616 milliseconds ago at 2025-08-03T14:08:38.000Z. Current time: 2025-08-03T14:09:01.616Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:65)
	... 58 common frames omitted
2025-08-03 22:09:01 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:09:01 - Pre-authenticated entry point called. Rejecting access
2025-08-03 22:09:01 - Securing GET /error
2025-08-03 22:09:01 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:09:01 - Pre-authenticated entry point called. Rejecting access
2025-08-03 22:09:16 - Securing POST /auth/login
2025-08-03 22:09:16 - JWT令牌不以Bearer字符串开头
2025-08-03 22:09:16 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:09:16 - Secured POST /auth/login
2025-08-03 22:09:16 - 收到登录请求: admin
2025-08-03 22:09:16 - 用户登录尝试: admin
2025-08-03 22:09:16 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:09:16 - ==> Parameters: admin(String)
2025-08-03 22:09:16 - <==      Total: 1
2025-08-03 22:09:16 - Authenticated user
2025-08-03 22:09:16 - 创建用户会话: username=admin, expirationTime=2025-08-03T22:39:16.243751
2025-08-03 22:09:16 - 用户会话创建成功: admin
2025-08-03 22:09:16 - ==>  Preparing: UPDATE users SET username=?, password=?, full_name=?, email=?, department=?, position=?, enabled=?, account_non_expired=?, account_non_locked=?, credentials_non_expired=?, last_login_time=?, last_login_ip=?, password_changed_time=?, failed_login_attempts=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 22:09:16 - ==> Parameters: admin(String), $2a$10$sBnVfcrUZJ4QoDbl.bqkM.TqDWy8MW.i5FU.vgnIZwnwapgdkHynC(String), 系统管理员(String), admin@clinic.com(String), IT部门(String), 系统管理员(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2025-08-03T22:09:16.243788(LocalDateTime), 127.0.0.1(String), 2025-08-02T10:43:28(LocalDateTime), 0(Integer), 2025-08-02T10:00:28(LocalDateTime), 2025-08-02T10:41:23(LocalDateTime), 1(Long)
2025-08-03 22:09:16 - <==    Updates: 1
2025-08-03 22:09:16 - 用户登录成功: admin
2025-08-03 22:09:16 - 用户登录成功: admin
2025-08-03 22:09:34 - Securing GET /roles
2025-08-03 22:09:34 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:09:34 - ==> Parameters: admin(String)
2025-08-03 22:09:34 - <==      Total: 1
2025-08-03 22:09:34 - Secured GET /roles
2025-08-03 22:09:34 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:09:34 - 获取用户权限: 1
2025-08-03 22:09:34 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:09:34 - ==> Parameters: 1(Long)
2025-08-03 22:09:34 - <==      Total: 59
2025-08-03 22:09:34 - 权限验证通过
2025-08-03 22:09:34 - 获取所有角色
2025-08-03 22:09:34 - 获取所有角色
2025-08-03 22:09:34 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 22:09:34 - ==> Parameters: 
2025-08-03 22:09:34 - <==      Total: 7
2025-08-03 22:11:22 - Securing POST /patients
2025-08-03 22:11:22 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:11:22 - ==> Parameters: admin(String)
2025-08-03 22:11:22 - <==      Total: 1
2025-08-03 22:11:22 - Secured POST /patients
2025-08-03 22:11:22 - Validation failed: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.me.joy.clinic.dto.PatientResponse> org.me.joy.clinic.controller.PatientManagementController.createPatient(org.me.joy.clinic.dto.CreatePatientRequest): [Field error in object 'createPatientRequest' on field 'gender': rejected value [MALE]; codes [Pattern.createPatientRequest.gender,Pattern.gender,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createPatientRequest.gender,gender]; arguments []; default message [gender],[Ljakarta.validation.constraints.Pattern$Flag;@5a7b0334,^(男|女|未知)$]; default message [性别只能是男、女或未知]] 
2025-08-03 22:12:47 - Securing POST /patients
2025-08-03 22:12:47 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:12:47 - ==> Parameters: admin(String)
2025-08-03 22:12:47 - <==      Total: 1
2025-08-03 22:12:47 - Secured POST /patients
2025-08-03 22:12:47 - 检查权限: PATIENT_CREATE (逻辑: OR)
2025-08-03 22:12:47 - 获取用户权限: 1
2025-08-03 22:12:47 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:12:47 - ==> Parameters: 1(Long)
2025-08-03 22:12:47 - <==      Total: 59
2025-08-03 22:12:47 - 权限验证通过
2025-08-03 22:12:47 - 创建患者请求: 测试患者
2025-08-03 22:12:47 - 创建新患者: 测试患者
2025-08-03 22:12:47 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:12:47 - ==> Parameters: P202508030001(String)
2025-08-03 22:12:47 - <==      Total: 1
2025-08-03 22:12:47 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:12:47 - ==> Parameters: P202508030002(String)
2025-08-03 22:12:47 - <==      Total: 0
2025-08-03 22:12:47 - ==>  Preparing: INSERT INTO patients ( patient_number, name, phone, birth_date, gender, is_vip, status, visit_count, created_at, updated_at, deleted ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-08-03 22:12:47 - ==> Parameters: P202508030002(String), 测试患者(String), 13800138000(String), 1990-01-01(LocalDate), 男(String), false(Boolean), 正常(String), 0(Integer), 2025-08-03T22:12:47.343823(LocalDateTime), 2025-08-03T22:12:47.343866(LocalDateTime), false(Boolean)
2025-08-03 22:12:47 - <==    Updates: 1
2025-08-03 22:12:47 - 患者创建成功: 测试患者, ID: 2
2025-08-03 22:12:47 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:12:47 - ==> Parameters: 2(Long)
2025-08-03 22:12:47 - <==      Total: 0
2025-08-03 22:12:47 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:12:47 - ==> Parameters: 2(Long)
2025-08-03 22:12:47 - <==      Total: 0
2025-08-03 22:12:47 - 患者创建成功: 2
2025-08-03 22:24:04 - Securing GET /inventory
2025-08-03 22:24:04 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:24:04 - ==> Parameters: admin(String)
2025-08-03 22:24:04 - <==      Total: 1
2025-08-03 22:24:04 - Secured GET /inventory
2025-08-03 22:24:04 - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource inventory.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 22:28:52 - Securing OPTIONS /auth/validate
2025-08-03 22:28:52 - Securing OPTIONS /auth/validate
2025-08-03 22:28:52 - Securing GET /auth/validate
2025-08-03 22:28:52 - 无法获取JWT令牌
java.lang.IllegalArgumentException: Invalid JWT token
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:68)
	at org.me.joy.clinic.security.JwtUtil.extractClaim(JwtUtil.java:53)
	at org.me.joy.clinic.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.jsonwebtoken.ExpiredJwtException: JWT expired 1076414 milliseconds ago at 2025-08-03T14:10:56.000Z. Current time: 2025-08-03T14:28:52.414Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:65)
	... 58 common frames omitted
2025-08-03 22:28:52 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:28:52 - Secured GET /auth/validate
2025-08-03 22:28:52 - Securing GET /auth/validate
2025-08-03 22:28:52 - 无法获取JWT令牌
java.lang.IllegalArgumentException: Invalid JWT token
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:68)
	at org.me.joy.clinic.security.JwtUtil.extractClaim(JwtUtil.java:53)
	at org.me.joy.clinic.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.jsonwebtoken.ExpiredJwtException: JWT expired 1076426 milliseconds ago at 2025-08-03T14:10:56.000Z. Current time: 2025-08-03T14:28:52.426Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:65)
	... 58 common frames omitted
2025-08-03 22:28:52 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:28:52 - Secured GET /auth/validate
2025-08-03 22:28:59 - Securing OPTIONS /auth/login
2025-08-03 22:28:59 - Securing POST /auth/login
2025-08-03 22:28:59 - JWT令牌不以Bearer字符串开头
2025-08-03 22:28:59 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:28:59 - Secured POST /auth/login
2025-08-03 22:28:59 - 收到登录请求: admin
2025-08-03 22:28:59 - 用户登录尝试: admin
2025-08-03 22:28:59 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:28:59 - ==> Parameters: admin(String)
2025-08-03 22:28:59 - <==      Total: 1
2025-08-03 22:28:59 - Authenticated user
2025-08-03 22:28:59 - 创建用户会话: username=admin, expirationTime=2025-08-03T22:58:59.744130
2025-08-03 22:28:59 - 用户会话创建成功: admin
2025-08-03 22:28:59 - ==>  Preparing: UPDATE users SET username=?, password=?, full_name=?, email=?, department=?, position=?, enabled=?, account_non_expired=?, account_non_locked=?, credentials_non_expired=?, last_login_time=?, last_login_ip=?, password_changed_time=?, failed_login_attempts=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 22:28:59 - ==> Parameters: admin(String), $2a$10$sBnVfcrUZJ4QoDbl.bqkM.TqDWy8MW.i5FU.vgnIZwnwapgdkHynC(String), 系统管理员(String), admin@clinic.com(String), IT部门(String), 系统管理员(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2025-08-03T22:28:59.744188(LocalDateTime), 127.0.0.1(String), 2025-08-02T10:43:28(LocalDateTime), 0(Integer), 2025-08-02T10:00:28(LocalDateTime), 2025-08-02T10:41:23(LocalDateTime), 1(Long)
2025-08-03 22:28:59 - <==    Updates: 1
2025-08-03 22:28:59 - 用户登录成功: admin
2025-08-03 22:28:59 - 用户登录成功: admin
2025-08-03 22:28:59 - Securing GET /auth/me
2025-08-03 22:28:59 - JWT令牌不以Bearer字符串开头
2025-08-03 22:28:59 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 22:28:59 - Secured GET /auth/me
2025-08-03 22:29:05 - Securing OPTIONS /users
2025-08-03 22:29:05 - Securing OPTIONS /roles/enabled
2025-08-03 22:29:05 - Securing OPTIONS /users
2025-08-03 22:29:05 - Securing OPTIONS /roles/enabled
2025-08-03 22:29:05 - Securing GET /users
2025-08-03 22:29:05 - Securing GET /roles/enabled
2025-08-03 22:29:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:05 - ==> Parameters: admin(String)
2025-08-03 22:29:05 - ==> Parameters: admin(String)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - Secured GET /roles/enabled
2025-08-03 22:29:05 - Secured GET /users
2025-08-03 22:29:05 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 22:29:05 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:29:05 - 获取用户权限: 1
2025-08-03 22:29:05 - 获取用户权限: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:05 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - <==      Total: 59
2025-08-03 22:29:05 - <==      Total: 59
2025-08-03 22:29:05 - 权限验证通过
2025-08-03 22:29:05 - 权限验证通过
2025-08-03 22:29:05 - 获取所有启用的角色
2025-08-03 22:29:05 - 获取所有启用的角色
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 22:29:05 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 22:29:05 - ==> Parameters: 
2025-08-03 22:29:05 - ==> Parameters: 
2025-08-03 22:29:05 - <==      Total: 3
2025-08-03 22:29:05 - 获取用户角色: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - <==      Total: 7
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - <==      Total: 2
2025-08-03 22:29:05 - 获取用户角色: 2
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 22:29:05 - ==> Parameters: 2(Long)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 22:29:05 - ==> Parameters: 2(Long)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - 获取用户角色: 3
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 22:29:05 - ==> Parameters: 3(Long)
2025-08-03 22:29:05 - Securing GET /roles/enabled
2025-08-03 22:29:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:05 - ==> Parameters: admin(String)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 22:29:05 - ==> Parameters: 3(Long)
2025-08-03 22:29:05 - <==      Total: 0
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - Secured GET /roles/enabled
2025-08-03 22:29:05 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:29:05 - 获取用户权限: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - Securing GET /users
2025-08-03 22:29:05 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:05 - ==> Parameters: admin(String)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - Secured GET /users
2025-08-03 22:29:05 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 22:29:05 - 获取用户权限: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - <==      Total: 59
2025-08-03 22:29:05 - 权限验证通过
2025-08-03 22:29:05 - 获取所有启用的角色
2025-08-03 22:29:05 - 获取所有启用的角色
2025-08-03 22:29:05 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 22:29:05 - ==> Parameters: 
2025-08-03 22:29:05 - <==      Total: 7
2025-08-03 22:29:05 - <==      Total: 59
2025-08-03 22:29:05 - 权限验证通过
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 22:29:05 - ==> Parameters: 
2025-08-03 22:29:05 - <==      Total: 3
2025-08-03 22:29:05 - 获取用户角色: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 22:29:05 - ==> Parameters: 1(Long)
2025-08-03 22:29:05 - <==      Total: 2
2025-08-03 22:29:05 - 获取用户角色: 2
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 22:29:05 - ==> Parameters: 2(Long)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 22:29:05 - ==> Parameters: 2(Long)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - 获取用户角色: 3
2025-08-03 22:29:05 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 22:29:05 - ==> Parameters: 3(Long)
2025-08-03 22:29:05 - <==      Total: 1
2025-08-03 22:29:05 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 22:29:05 - ==> Parameters: 3(Long)
2025-08-03 22:29:05 - <==      Total: 0
2025-08-03 22:29:06 - Securing OPTIONS /roles
2025-08-03 22:29:06 - Securing OPTIONS /roles
2025-08-03 22:29:06 - Securing GET /roles
2025-08-03 22:29:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:06 - ==> Parameters: admin(String)
2025-08-03 22:29:06 - <==      Total: 1
2025-08-03 22:29:06 - Secured GET /roles
2025-08-03 22:29:06 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:29:06 - 获取用户权限: 1
2025-08-03 22:29:06 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:06 - ==> Parameters: 1(Long)
2025-08-03 22:29:06 - <==      Total: 59
2025-08-03 22:29:06 - 权限验证通过
2025-08-03 22:29:06 - 获取所有角色
2025-08-03 22:29:06 - 获取所有角色
2025-08-03 22:29:06 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 22:29:06 - ==> Parameters: 
2025-08-03 22:29:06 - <==      Total: 7
2025-08-03 22:29:06 - Securing GET /roles
2025-08-03 22:29:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:06 - ==> Parameters: admin(String)
2025-08-03 22:29:06 - <==      Total: 1
2025-08-03 22:29:06 - Secured GET /roles
2025-08-03 22:29:06 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:29:06 - 获取用户权限: 1
2025-08-03 22:29:06 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:06 - ==> Parameters: 1(Long)
2025-08-03 22:29:06 - <==      Total: 59
2025-08-03 22:29:06 - 权限验证通过
2025-08-03 22:29:06 - 获取所有角色
2025-08-03 22:29:06 - 获取所有角色
2025-08-03 22:29:06 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 22:29:06 - ==> Parameters: 
2025-08-03 22:29:06 - <==      Total: 7
2025-08-03 22:29:15 - Securing PUT /roles/10
2025-08-03 22:29:15 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:15 - ==> Parameters: admin(String)
2025-08-03 22:29:15 - <==      Total: 1
2025-08-03 22:29:15 - Secured PUT /roles/10
2025-08-03 22:29:15 - 检查权限: ROLE_UPDATE (逻辑: OR)
2025-08-03 22:29:15 - 获取用户权限: 1
2025-08-03 22:29:15 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:15 - ==> Parameters: 1(Long)
2025-08-03 22:29:15 - <==      Total: 59
2025-08-03 22:29:15 - 权限验证通过
2025-08-03 22:29:15 - 更新角色: 10
2025-08-03 22:29:15 - 更新角色: 10
2025-08-03 22:29:15 - 根据ID获取角色: 10
2025-08-03 22:29:15 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE id=? AND deleted=0
2025-08-03 22:29:15 - ==> Parameters: 10(Long)
2025-08-03 22:29:15 - <==      Total: 1
2025-08-03 22:29:15 - ==>  Preparing: UPDATE roles SET role_code=?, role_name=?, description=?, enabled=?, is_system_role=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 22:29:15 - ==> Parameters: aaa(String), 啊啊啊b(String), aaa(String), true(Boolean), false(Boolean), 2025-08-03T21:42:51(LocalDateTime), 2025-08-03T21:42:51(LocalDateTime), 10(Long)
2025-08-03 22:29:15 - <==    Updates: 1
2025-08-03 22:29:15 - 角色更新成功: 10
2025-08-03 22:29:15 - Securing GET /roles
2025-08-03 22:29:15 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:15 - ==> Parameters: admin(String)
2025-08-03 22:29:15 - <==      Total: 1
2025-08-03 22:29:15 - Secured GET /roles
2025-08-03 22:29:15 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:29:15 - 获取用户权限: 1
2025-08-03 22:29:15 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:15 - ==> Parameters: 1(Long)
2025-08-03 22:29:15 - <==      Total: 59
2025-08-03 22:29:15 - 权限验证通过
2025-08-03 22:29:15 - 获取所有角色
2025-08-03 22:29:15 - 获取所有角色
2025-08-03 22:29:15 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 22:29:15 - ==> Parameters: 
2025-08-03 22:29:15 - <==      Total: 7
2025-08-03 22:29:19 - Securing DELETE /roles/10
2025-08-03 22:29:19 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:19 - ==> Parameters: admin(String)
2025-08-03 22:29:19 - <==      Total: 1
2025-08-03 22:29:19 - Secured DELETE /roles/10
2025-08-03 22:29:19 - 检查权限: ROLE_DELETE (逻辑: OR)
2025-08-03 22:29:19 - 获取用户权限: 1
2025-08-03 22:29:19 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:19 - ==> Parameters: 1(Long)
2025-08-03 22:29:19 - <==      Total: 59
2025-08-03 22:29:19 - 权限验证通过
2025-08-03 22:29:19 - 删除角色: 10
2025-08-03 22:29:19 - 删除角色: 10
2025-08-03 22:29:19 - 根据ID获取角色: 10
2025-08-03 22:29:19 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE id=? AND deleted=0
2025-08-03 22:29:19 - ==> Parameters: 10(Long)
2025-08-03 22:29:19 - <==      Total: 1
2025-08-03 22:29:19 - ==>  Preparing: SELECT u.* FROM users u JOIN user_roles ur ON u.id = ur.user_id WHERE ur.role_id = ? AND u.deleted = 0
2025-08-03 22:29:19 - ==> Parameters: 10(Long)
2025-08-03 22:29:19 - <==      Total: 0
2025-08-03 22:29:19 - ==>  Preparing: DELETE FROM role_permissions WHERE role_id = ?
2025-08-03 22:29:19 - ==> Parameters: 10(Long)
2025-08-03 22:29:19 - <==    Updates: 0
2025-08-03 22:29:19 - ==>  Preparing: UPDATE roles SET deleted=1 WHERE id=? AND deleted=0
2025-08-03 22:29:19 - ==> Parameters: 10(Long)
2025-08-03 22:29:19 - <==    Updates: 1
2025-08-03 22:29:19 - 角色删除成功: 10
2025-08-03 22:29:19 - Securing GET /roles
2025-08-03 22:29:19 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:19 - ==> Parameters: admin(String)
2025-08-03 22:29:19 - <==      Total: 1
2025-08-03 22:29:19 - Secured GET /roles
2025-08-03 22:29:19 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:29:19 - 获取用户权限: 1
2025-08-03 22:29:19 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:19 - ==> Parameters: 1(Long)
2025-08-03 22:29:19 - <==      Total: 59
2025-08-03 22:29:19 - 权限验证通过
2025-08-03 22:29:19 - 获取所有角色
2025-08-03 22:29:19 - 获取所有角色
2025-08-03 22:29:19 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 22:29:19 - ==> Parameters: 
2025-08-03 22:29:19 - <==      Total: 6
2025-08-03 22:29:23 - Securing GET /patients
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:23 - ==> Parameters: admin(String)
2025-08-03 22:29:23 - <==      Total: 1
2025-08-03 22:29:23 - Secured GET /patients
2025-08-03 22:29:23 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 22:29:23 - 获取用户权限: 1
2025-08-03 22:29:23 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:23 - ==> Parameters: 1(Long)
2025-08-03 22:29:23 - <==      Total: 59
2025-08-03 22:29:23 - 权限验证通过
2025-08-03 22:29:23 - 获取所有患者列表
2025-08-03 22:29:23 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 22:29:23 - ==> Parameters: 
2025-08-03 22:29:23 - <==      Total: 2
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 1(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 1(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 2(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 2(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:29:23 - Securing GET /patients
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:29:23 - ==> Parameters: admin(String)
2025-08-03 22:29:23 - <==      Total: 1
2025-08-03 22:29:23 - Secured GET /patients
2025-08-03 22:29:23 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 22:29:23 - 获取用户权限: 1
2025-08-03 22:29:23 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:29:23 - ==> Parameters: 1(Long)
2025-08-03 22:29:23 - <==      Total: 59
2025-08-03 22:29:23 - 权限验证通过
2025-08-03 22:29:23 - 获取所有患者列表
2025-08-03 22:29:23 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 22:29:23 - ==> Parameters: 
2025-08-03 22:29:23 - <==      Total: 2
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 1(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 1(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 2(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:29:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:29:23 - ==> Parameters: 2(Long)
2025-08-03 22:29:23 - <==      Total: 0
2025-08-03 22:30:07 - Securing POST /patients
2025-08-03 22:30:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:30:07 - ==> Parameters: admin(String)
2025-08-03 22:30:07 - <==      Total: 1
2025-08-03 22:30:07 - Secured POST /patients
2025-08-03 22:30:07 - 检查权限: PATIENT_CREATE (逻辑: OR)
2025-08-03 22:30:07 - 获取用户权限: 1
2025-08-03 22:30:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:30:07 - ==> Parameters: 1(Long)
2025-08-03 22:30:07 - <==      Total: 59
2025-08-03 22:30:07 - 权限验证通过
2025-08-03 22:30:07 - 创建患者请求: Joy
2025-08-03 22:30:07 - 创建新患者: Joy
2025-08-03 22:30:07 - ==>  Preparing: SELECT * FROM patients WHERE id_card = ? AND deleted = 0
2025-08-03 22:30:07 - ==> Parameters: 360782200108161234(String)
2025-08-03 22:30:07 - <==      Total: 1
2025-08-03 22:30:07 - Validation error: 身份证号已存在
2025-08-03 22:30:20 - Securing POST /patients
2025-08-03 22:30:20 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:30:20 - ==> Parameters: admin(String)
2025-08-03 22:30:20 - <==      Total: 1
2025-08-03 22:30:20 - Secured POST /patients
2025-08-03 22:30:20 - 检查权限: PATIENT_CREATE (逻辑: OR)
2025-08-03 22:30:20 - 获取用户权限: 1
2025-08-03 22:30:20 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:30:20 - ==> Parameters: 1(Long)
2025-08-03 22:30:20 - <==      Total: 59
2025-08-03 22:30:20 - 权限验证通过
2025-08-03 22:30:20 - 创建患者请求: Joy
2025-08-03 22:30:20 - 创建新患者: Joy
2025-08-03 22:30:20 - ==>  Preparing: SELECT * FROM patients WHERE id_card = ? AND deleted = 0
2025-08-03 22:30:20 - ==> Parameters: 360782200103161234(String)
2025-08-03 22:30:20 - <==      Total: 0
2025-08-03 22:30:20 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:30:20 - ==> Parameters: P202508030001(String)
2025-08-03 22:30:20 - <==      Total: 1
2025-08-03 22:30:20 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:30:20 - ==> Parameters: P202508030002(String)
2025-08-03 22:30:20 - <==      Total: 1
2025-08-03 22:30:20 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:30:20 - ==> Parameters: P202508030003(String)
2025-08-03 22:30:20 - <==      Total: 0
2025-08-03 22:30:20 - ==>  Preparing: INSERT INTO patients ( patient_number, name, phone, id_card, birth_date, gender, address, emergency_contact_name, emergency_contact_phone, emergency_contact_relation, blood_type, marital_status, occupation, ethnicity, insurance_type, insurance_number, remarks, is_vip, status, visit_count, created_at, updated_at, deleted ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-08-03 22:30:20 - ==> Parameters: P202508030003(String), Joy(String), 13307981561(String), 360782200103161234(String), 2000-01-03(LocalDate), 男(String), 棠下街道棠东村凌角大街25号(String), Joy(String), 13307981562(String), fuzi(String), A+(String), 未知(String), ces(String), 汉族(String), 职工医保(String), 13354656757(String), 1243hgmhgmghjmj(String), true(Boolean), 正常(String), 0(Integer), 2025-08-03T22:30:20.693926(LocalDateTime), 2025-08-03T22:30:20.693965(LocalDateTime), false(Boolean)
2025-08-03 22:30:20 - <==    Updates: 1
2025-08-03 22:30:20 - 患者创建成功: Joy, ID: 3
2025-08-03 22:30:20 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:30:20 - ==> Parameters: 3(Long)
2025-08-03 22:30:20 - <==      Total: 0
2025-08-03 22:30:20 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:30:20 - ==> Parameters: 3(Long)
2025-08-03 22:30:20 - <==      Total: 0
2025-08-03 22:30:20 - 患者创建成功: 3
2025-08-03 22:30:36 - Securing POST /patients
2025-08-03 22:30:36 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:30:36 - ==> Parameters: admin(String)
2025-08-03 22:30:36 - <==      Total: 1
2025-08-03 22:30:36 - Secured POST /patients
2025-08-03 22:30:36 - 检查权限: PATIENT_CREATE (逻辑: OR)
2025-08-03 22:30:36 - 获取用户权限: 1
2025-08-03 22:30:36 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:30:36 - ==> Parameters: 1(Long)
2025-08-03 22:30:36 - <==      Total: 59
2025-08-03 22:30:36 - 权限验证通过
2025-08-03 22:30:36 - 创建患者请求: Joy
2025-08-03 22:30:36 - 创建新患者: Joy
2025-08-03 22:30:36 - ==>  Preparing: SELECT * FROM patients WHERE id_card = ? AND deleted = 0
2025-08-03 22:30:36 - ==> Parameters: 360782200103161234(String)
2025-08-03 22:30:36 - <==      Total: 1
2025-08-03 22:30:36 - Validation error: 身份证号已存在
2025-08-03 22:30:42 - Securing POST /patients
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:30:42 - ==> Parameters: admin(String)
2025-08-03 22:30:42 - <==      Total: 1
2025-08-03 22:30:42 - Secured POST /patients
2025-08-03 22:30:42 - 检查权限: PATIENT_CREATE (逻辑: OR)
2025-08-03 22:30:42 - 获取用户权限: 1
2025-08-03 22:30:42 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:30:42 - ==> Parameters: 1(Long)
2025-08-03 22:30:42 - <==      Total: 59
2025-08-03 22:30:42 - 权限验证通过
2025-08-03 22:30:42 - 创建患者请求: Joy2
2025-08-03 22:30:42 - 创建新患者: Joy2
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM patients WHERE id_card = ? AND deleted = 0
2025-08-03 22:30:42 - ==> Parameters: 360782200103161235(String)
2025-08-03 22:30:42 - <==      Total: 0
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:30:42 - ==> Parameters: P202508030001(String)
2025-08-03 22:30:42 - <==      Total: 1
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:30:42 - ==> Parameters: P202508030002(String)
2025-08-03 22:30:42 - <==      Total: 1
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:30:42 - ==> Parameters: P202508030003(String)
2025-08-03 22:30:42 - <==      Total: 1
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:30:42 - ==> Parameters: P202508030004(String)
2025-08-03 22:30:42 - <==      Total: 0
2025-08-03 22:30:42 - ==>  Preparing: INSERT INTO patients ( patient_number, name, phone, id_card, birth_date, gender, address, emergency_contact_name, emergency_contact_phone, emergency_contact_relation, blood_type, marital_status, occupation, ethnicity, insurance_type, insurance_number, remarks, is_vip, status, visit_count, created_at, updated_at, deleted ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-08-03 22:30:42 - ==> Parameters: P202508030004(String), Joy2(String), 13307981561(String), 360782200103161235(String), 2000-01-03(LocalDate), 男(String), 棠下街道棠东村凌角大街25号(String), Joy(String), 13307981562(String), fuzi(String), A+(String), 未知(String), ces(String), 汉族(String), 职工医保(String), 13354656757(String), 1243hgmhgmghjmj(String), true(Boolean), 正常(String), 0(Integer), 2025-08-03T22:30:42.511486(LocalDateTime), 2025-08-03T22:30:42.511516(LocalDateTime), false(Boolean)
2025-08-03 22:30:42 - <==    Updates: 1
2025-08-03 22:30:42 - 患者创建成功: Joy2, ID: 4
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:30:42 - ==> Parameters: 4(Long)
2025-08-03 22:30:42 - <==      Total: 0
2025-08-03 22:30:42 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:30:42 - ==> Parameters: 4(Long)
2025-08-03 22:30:42 - <==      Total: 0
2025-08-03 22:30:42 - 患者创建成功: 4
2025-08-03 22:30:49 - Securing GET /patients
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:30:49 - ==> Parameters: admin(String)
2025-08-03 22:30:49 - <==      Total: 1
2025-08-03 22:30:49 - Secured GET /patients
2025-08-03 22:30:49 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 22:30:49 - 获取用户权限: 1
2025-08-03 22:30:49 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:30:49 - ==> Parameters: 1(Long)
2025-08-03 22:30:49 - <==      Total: 59
2025-08-03 22:30:49 - 权限验证通过
2025-08-03 22:30:49 - 获取所有患者列表
2025-08-03 22:30:49 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 22:30:49 - ==> Parameters: 
2025-08-03 22:30:49 - <==      Total: 4
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 1(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 1(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 2(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 2(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 3(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 3(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 4(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:30:49 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:30:49 - ==> Parameters: 4(Long)
2025-08-03 22:30:49 - <==      Total: 0
2025-08-03 22:31:24 - Securing OPTIONS /staff
2025-08-03 22:31:24 - Securing OPTIONS /staff
2025-08-03 22:31:24 - Securing GET /staff
2025-08-03 22:31:24 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:31:24 - ==> Parameters: admin(String)
2025-08-03 22:31:24 - <==      Total: 1
2025-08-03 22:31:24 - Secured GET /staff
2025-08-03 22:31:24 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:31:24 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:31:24 - Access denied: Access Denied
2025-08-03 22:31:24 - Securing GET /staff
2025-08-03 22:31:24 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:31:24 - ==> Parameters: admin(String)
2025-08-03 22:31:24 - <==      Total: 1
2025-08-03 22:31:24 - Secured GET /staff
2025-08-03 22:31:24 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:31:24 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:31:24 - Access denied: Access Denied
2025-08-03 22:32:03 - Securing OPTIONS /staff
2025-08-03 22:32:03 - Securing POST /staff
2025-08-03 22:32:03 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:32:03 - ==> Parameters: admin(String)
2025-08-03 22:32:03 - <==      Total: 1
2025-08-03 22:32:03 - Secured POST /staff
2025-08-03 22:32:03 - Validation failed: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.me.joy.clinic.dto.StaffResponse> org.me.joy.clinic.controller.StaffManagementController.createStaff(org.me.joy.clinic.dto.CreateStaffRequest) with 4 errors: [Field error in object 'createStaffRequest' on field 'name': rejected value [null]; codes [NotBlank.createStaffRequest.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createStaffRequest.name,name]; arguments []; default message [name]]; default message [员工姓名不能为空]] [Field error in object 'createStaffRequest' on field 'position': rejected value [主任医师]; codes [Pattern.createStaffRequest.position,Pattern.position,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createStaffRequest.position,position]; arguments []; default message [position],[Ljakarta.validation.constraints.Pattern$Flag;@5a7b0334,^(医生|护士|药剂师|前台|管理员|其他)$]; default message [职位类型只能是医生、护士、药剂师、前台、管理员或其他]] [Field error in object 'createStaffRequest' on field 'gender': rejected value [null]; codes [NotBlank.createStaffRequest.gender,NotBlank.gender,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createStaffRequest.gender,gender]; arguments []; default message [gender]]; default message [性别不能为空]] [Field error in object 'createStaffRequest' on field 'hireDate': rejected value [null]; codes [NotNull.createStaffRequest.hireDate,NotNull.hireDate,NotNull.java.time.LocalDate,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createStaffRequest.hireDate,hireDate]; arguments []; default message [hireDate]]; default message [入职日期不能为空]] 
2025-08-03 22:35:15 - Securing GET /patients
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:35:15 - ==> Parameters: admin(String)
2025-08-03 22:35:15 - <==      Total: 1
2025-08-03 22:35:15 - Secured GET /patients
2025-08-03 22:35:15 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 22:35:15 - 获取用户权限: 1
2025-08-03 22:35:15 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:35:15 - ==> Parameters: 1(Long)
2025-08-03 22:35:15 - <==      Total: 59
2025-08-03 22:35:15 - 权限验证通过
2025-08-03 22:35:15 - 获取所有患者列表
2025-08-03 22:35:15 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 22:35:15 - ==> Parameters: 
2025-08-03 22:35:15 - <==      Total: 4
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 1(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 1(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 2(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 2(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 3(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 3(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 4(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:35:15 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:35:15 - ==> Parameters: 4(Long)
2025-08-03 22:35:15 - <==      Total: 0
2025-08-03 22:37:07 - Securing GET /roles
2025-08-03 22:37:07 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:37:07 - ==> Parameters: admin(String)
2025-08-03 22:37:07 - <==      Total: 1
2025-08-03 22:37:07 - Secured GET /roles
2025-08-03 22:37:07 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 22:37:07 - 获取用户权限: 1
2025-08-03 22:37:07 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:37:07 - ==> Parameters: 1(Long)
2025-08-03 22:37:07 - <==      Total: 59
2025-08-03 22:37:07 - 权限验证通过
2025-08-03 22:37:07 - 获取所有角色
2025-08-03 22:37:07 - 获取所有角色
2025-08-03 22:37:07 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 22:37:07 - ==> Parameters: 
2025-08-03 22:37:07 - <==      Total: 6
2025-08-03 22:38:24 - Securing POST /patients
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:38:24 - ==> Parameters: admin(String)
2025-08-03 22:38:24 - <==      Total: 1
2025-08-03 22:38:24 - Secured POST /patients
2025-08-03 22:38:24 - 检查权限: PATIENT_CREATE (逻辑: OR)
2025-08-03 22:38:24 - 获取用户权限: 1
2025-08-03 22:38:24 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 22:38:24 - ==> Parameters: 1(Long)
2025-08-03 22:38:24 - <==      Total: 59
2025-08-03 22:38:24 - 权限验证通过
2025-08-03 22:38:24 - 创建患者请求: 测试患者2
2025-08-03 22:38:24 - 创建新患者: 测试患者2
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:38:24 - ==> Parameters: P202508030001(String)
2025-08-03 22:38:24 - <==      Total: 1
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:38:24 - ==> Parameters: P202508030002(String)
2025-08-03 22:38:24 - <==      Total: 1
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:38:24 - ==> Parameters: P202508030003(String)
2025-08-03 22:38:24 - <==      Total: 1
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:38:24 - ==> Parameters: P202508030004(String)
2025-08-03 22:38:24 - <==      Total: 1
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM patients WHERE patient_number = ? AND deleted = 0
2025-08-03 22:38:24 - ==> Parameters: P202508030005(String)
2025-08-03 22:38:24 - <==      Total: 0
2025-08-03 22:38:24 - ==>  Preparing: INSERT INTO patients ( patient_number, name, phone, birth_date, gender, is_vip, status, visit_count, created_at, updated_at, deleted ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-08-03 22:38:24 - ==> Parameters: P202508030005(String), 测试患者2(String), 13800138001(String), 1990-01-01(LocalDate), 男(String), false(Boolean), 正常(String), 0(Integer), 2025-08-03T22:38:24.594841(LocalDateTime), 2025-08-03T22:38:24.595029(LocalDateTime), false(Boolean)
2025-08-03 22:38:24 - <==    Updates: 1
2025-08-03 22:38:24 - 患者创建成功: 测试患者2, ID: 5
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 22:38:24 - ==> Parameters: 5(Long)
2025-08-03 22:38:24 - <==      Total: 0
2025-08-03 22:38:24 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 22:38:24 - ==> Parameters: 5(Long)
2025-08-03 22:38:24 - <==      Total: 0
2025-08-03 22:38:24 - 患者创建成功: 5
2025-08-03 22:40:19 - Securing GET /staff
2025-08-03 22:40:19 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:40:19 - ==> Parameters: admin(String)
2025-08-03 22:40:19 - <==      Total: 1
2025-08-03 22:40:19 - Secured GET /staff
2025-08-03 22:40:19 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:40:19 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:40:19 - Access denied: Access Denied
2025-08-03 22:40:39 - Securing GET /staff
2025-08-03 22:40:39 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:40:39 - ==> Parameters: admin(String)
2025-08-03 22:40:39 - <==      Total: 1
2025-08-03 22:40:39 - Secured GET /staff
2025-08-03 22:40:39 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:40:39 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:40:39 - Access denied: Access Denied
2025-08-03 22:41:06 - Securing GET /staff
2025-08-03 22:41:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:41:06 - ==> Parameters: admin(String)
2025-08-03 22:41:06 - <==      Total: 1
2025-08-03 22:41:06 - Secured GET /staff
2025-08-03 22:41:06 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:41:06 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:41:06 - Access denied: Access Denied
2025-08-03 22:41:35 - Securing GET /staff
2025-08-03 22:41:35 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:41:35 - ==> Parameters: admin(String)
2025-08-03 22:41:35 - <==      Total: 1
2025-08-03 22:41:35 - Secured GET /staff
2025-08-03 22:41:35 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:41:35 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:41:35 - Access denied: Access Denied
2025-08-03 22:42:12 - Securing GET /staff
2025-08-03 22:42:12 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:42:12 - ==> Parameters: admin(String)
2025-08-03 22:42:12 - <==      Total: 1
2025-08-03 22:42:12 - Secured GET /staff
2025-08-03 22:42:12 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:42:12 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:42:12 - Access denied: Access Denied
2025-08-03 22:43:51 - Securing GET /staff
2025-08-03 22:43:51 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:43:51 - ==> Parameters: admin(String)
2025-08-03 22:43:51 - <==      Total: 1
2025-08-03 22:43:51 - Secured GET /staff
2025-08-03 22:43:51 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:43:51 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:43:51 - Access denied: Access Denied
2025-08-03 22:43:51 - Securing GET /staff
2025-08-03 22:43:51 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:43:51 - ==> Parameters: admin(String)
2025-08-03 22:43:51 - <==      Total: 1
2025-08-03 22:43:51 - Secured GET /staff
2025-08-03 22:43:51 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:43:51 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:43:51 - Access denied: Access Denied
2025-08-03 22:45:44 - Securing GET /staff
2025-08-03 22:45:44 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:45:44 - ==> Parameters: admin(String)
2025-08-03 22:45:44 - <==      Total: 1
2025-08-03 22:45:44 - Secured GET /staff
2025-08-03 22:45:44 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:45:44 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:45:44 - Access denied: Access Denied
2025-08-03 22:46:06 - Securing GET /staff
2025-08-03 22:46:06 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:46:06 - ==> Parameters: admin(String)
2025-08-03 22:46:06 - <==      Total: 1
2025-08-03 22:46:06 - Secured GET /staff
2025-08-03 22:46:06 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:46:06 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:46:06 - Access denied: Access Denied
2025-08-03 22:46:24 - Securing GET /staff
2025-08-03 22:46:24 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:46:24 - ==> Parameters: admin(String)
2025-08-03 22:46:24 - <==      Total: 1
2025-08-03 22:46:24 - Secured GET /staff
2025-08-03 22:46:24 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:46:24 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:46:24 - Access denied: Access Denied
2025-08-03 22:47:00 - Securing GET /staff
2025-08-03 22:47:00 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 22:47:00 - ==> Parameters: admin(String)
2025-08-03 22:47:00 - <==      Total: 1
2025-08-03 22:47:00 - Secured GET /staff
2025-08-03 22:47:00 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 22:47:00 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 22:47:00 - Access denied: Access Denied
2025-08-03 23:10:02 - Securing GET /auth/validate
2025-08-03 23:10:02 - 无法获取JWT令牌
java.lang.IllegalArgumentException: Invalid JWT token
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:68)
	at org.me.joy.clinic.security.JwtUtil.extractClaim(JwtUtil.java:53)
	at org.me.joy.clinic.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.jsonwebtoken.ExpiredJwtException: JWT expired 663287 milliseconds ago at 2025-08-03T14:58:59.000Z. Current time: 2025-08-03T15:10:02.287Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:65)
	... 58 common frames omitted
2025-08-03 23:10:02 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 23:10:02 - Secured GET /auth/validate
2025-08-03 23:10:02 - Securing GET /auth/validate
2025-08-03 23:10:02 - 无法获取JWT令牌
java.lang.IllegalArgumentException: Invalid JWT token
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:68)
	at org.me.joy.clinic.security.JwtUtil.extractClaim(JwtUtil.java:53)
	at org.me.joy.clinic.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.jsonwebtoken.ExpiredJwtException: JWT expired 663298 milliseconds ago at 2025-08-03T14:58:59.000Z. Current time: 2025-08-03T15:10:02.298Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at org.me.joy.clinic.security.JwtUtil.extractAllClaims(JwtUtil.java:65)
	... 58 common frames omitted
2025-08-03 23:10:02 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 23:10:02 - Secured GET /auth/validate
2025-08-03 23:10:08 - Securing POST /auth/login
2025-08-03 23:10:08 - JWT令牌不以Bearer字符串开头
2025-08-03 23:10:08 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 23:10:08 - Secured POST /auth/login
2025-08-03 23:10:08 - 收到登录请求: admin
2025-08-03 23:10:08 - 用户登录尝试: admin
2025-08-03 23:10:08 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:08 - ==> Parameters: admin(String)
2025-08-03 23:10:08 - <==      Total: 1
2025-08-03 23:10:09 - Authenticated user
2025-08-03 23:10:09 - 创建用户会话: username=admin, expirationTime=2025-08-03T23:40:09.076426
2025-08-03 23:10:09 - 用户会话创建成功: admin
2025-08-03 23:10:09 - ==>  Preparing: UPDATE users SET username=?, password=?, full_name=?, email=?, department=?, position=?, enabled=?, account_non_expired=?, account_non_locked=?, credentials_non_expired=?, last_login_time=?, last_login_ip=?, password_changed_time=?, failed_login_attempts=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 23:10:09 - ==> Parameters: admin(String), $2a$10$sBnVfcrUZJ4QoDbl.bqkM.TqDWy8MW.i5FU.vgnIZwnwapgdkHynC(String), 系统管理员(String), admin@clinic.com(String), IT部门(String), 系统管理员(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2025-08-03T23:10:09.076534(LocalDateTime), 127.0.0.1(String), 2025-08-02T10:43:28(LocalDateTime), 0(Integer), 2025-08-02T10:00:28(LocalDateTime), 2025-08-02T10:41:23(LocalDateTime), 1(Long)
2025-08-03 23:10:09 - <==    Updates: 1
2025-08-03 23:10:09 - 用户登录成功: admin
2025-08-03 23:10:09 - 用户登录成功: admin
2025-08-03 23:10:09 - Securing GET /auth/me
2025-08-03 23:10:09 - JWT令牌不以Bearer字符串开头
2025-08-03 23:10:09 - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 23:10:09 - Secured GET /auth/me
2025-08-03 23:10:17 - Securing GET /users
2025-08-03 23:10:17 - Securing GET /roles/enabled
2025-08-03 23:10:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:17 - ==> Parameters: admin(String)
2025-08-03 23:10:17 - ==> Parameters: admin(String)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - Secured GET /users
2025-08-03 23:10:17 - Secured GET /roles/enabled
2025-08-03 23:10:17 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 23:10:17 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 23:10:17 - 获取用户权限: 1
2025-08-03 23:10:17 - 获取用户权限: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - <==      Total: 59
2025-08-03 23:10:17 - <==      Total: 59
2025-08-03 23:10:17 - 权限验证通过
2025-08-03 23:10:17 - 权限验证通过
2025-08-03 23:10:17 - 获取所有启用的角色
2025-08-03 23:10:17 - 获取所有启用的角色
2025-08-03 23:10:17 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 23:10:17 - ==> Parameters: 
2025-08-03 23:10:17 - ==> Parameters: 
2025-08-03 23:10:17 - <==      Total: 3
2025-08-03 23:10:17 - <==      Total: 6
2025-08-03 23:10:17 - 获取用户角色: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - <==      Total: 2
2025-08-03 23:10:17 - 获取用户角色: 2
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:10:17 - ==> Parameters: 2(Long)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - Securing GET /roles/enabled
2025-08-03 23:10:17 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:10:17 - ==> Parameters: 2(Long)
2025-08-03 23:10:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - ==> Parameters: admin(String)
2025-08-03 23:10:17 - 获取用户角色: 3
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:10:17 - ==> Parameters: 3(Long)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:10:17 - ==> Parameters: 3(Long)
2025-08-03 23:10:17 - Secured GET /roles/enabled
2025-08-03 23:10:17 - <==      Total: 0
2025-08-03 23:10:17 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 23:10:17 - 获取用户权限: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - Securing GET /users
2025-08-03 23:10:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:17 - ==> Parameters: admin(String)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - <==      Total: 59
2025-08-03 23:10:17 - Secured GET /users
2025-08-03 23:10:17 - 权限验证通过
2025-08-03 23:10:17 - 获取所有启用的角色
2025-08-03 23:10:17 - 获取所有启用的角色
2025-08-03 23:10:17 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 23:10:17 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 23:10:17 - ==> Parameters: 
2025-08-03 23:10:17 - 获取用户权限: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - <==      Total: 6
2025-08-03 23:10:17 - <==      Total: 59
2025-08-03 23:10:17 - 权限验证通过
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 23:10:17 - ==> Parameters: 
2025-08-03 23:10:17 - <==      Total: 3
2025-08-03 23:10:17 - 获取用户角色: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:10:17 - ==> Parameters: 1(Long)
2025-08-03 23:10:17 - <==      Total: 2
2025-08-03 23:10:17 - 获取用户角色: 2
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:10:17 - ==> Parameters: 2(Long)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:10:17 - ==> Parameters: 2(Long)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - 获取用户角色: 3
2025-08-03 23:10:17 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:10:17 - ==> Parameters: 3(Long)
2025-08-03 23:10:17 - <==      Total: 1
2025-08-03 23:10:17 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:10:17 - ==> Parameters: 3(Long)
2025-08-03 23:10:17 - <==      Total: 0
2025-08-03 23:10:18 - Securing GET /roles
2025-08-03 23:10:18 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:18 - ==> Parameters: admin(String)
2025-08-03 23:10:18 - <==      Total: 1
2025-08-03 23:10:18 - Secured GET /roles
2025-08-03 23:10:18 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 23:10:18 - 获取用户权限: 1
2025-08-03 23:10:18 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:18 - ==> Parameters: 1(Long)
2025-08-03 23:10:18 - <==      Total: 59
2025-08-03 23:10:18 - 权限验证通过
2025-08-03 23:10:18 - 获取所有角色
2025-08-03 23:10:18 - 获取所有角色
2025-08-03 23:10:18 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 23:10:18 - ==> Parameters: 
2025-08-03 23:10:18 - <==      Total: 6
2025-08-03 23:10:18 - Securing GET /roles
2025-08-03 23:10:18 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:18 - ==> Parameters: admin(String)
2025-08-03 23:10:18 - <==      Total: 1
2025-08-03 23:10:18 - Secured GET /roles
2025-08-03 23:10:18 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 23:10:18 - 获取用户权限: 1
2025-08-03 23:10:18 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:18 - ==> Parameters: 1(Long)
2025-08-03 23:10:18 - <==      Total: 59
2025-08-03 23:10:18 - 权限验证通过
2025-08-03 23:10:18 - 获取所有角色
2025-08-03 23:10:18 - 获取所有角色
2025-08-03 23:10:18 - ==>  Preparing: SELECT id,role_code,role_name,description,enabled,is_system_role,created_at,updated_at,deleted FROM roles WHERE deleted=0
2025-08-03 23:10:18 - ==> Parameters: 
2025-08-03 23:10:18 - <==      Total: 6
2025-08-03 23:10:22 - Securing OPTIONS /patients
2025-08-03 23:10:22 - Securing OPTIONS /patients
2025-08-03 23:10:22 - Securing GET /patients
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:22 - ==> Parameters: admin(String)
2025-08-03 23:10:22 - <==      Total: 1
2025-08-03 23:10:22 - Secured GET /patients
2025-08-03 23:10:22 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:10:22 - 获取用户权限: 1
2025-08-03 23:10:22 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:22 - ==> Parameters: 1(Long)
2025-08-03 23:10:22 - <==      Total: 59
2025-08-03 23:10:22 - 权限验证通过
2025-08-03 23:10:22 - 获取所有患者列表
2025-08-03 23:10:22 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:10:22 - ==> Parameters: 
2025-08-03 23:10:22 - <==      Total: 5
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 1(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 1(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 2(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 2(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 3(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 3(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 4(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 4(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 5(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 5(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - Securing GET /patients
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:22 - ==> Parameters: admin(String)
2025-08-03 23:10:22 - <==      Total: 1
2025-08-03 23:10:22 - Secured GET /patients
2025-08-03 23:10:22 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:10:22 - 获取用户权限: 1
2025-08-03 23:10:22 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:22 - ==> Parameters: 1(Long)
2025-08-03 23:10:22 - <==      Total: 59
2025-08-03 23:10:22 - 权限验证通过
2025-08-03 23:10:22 - 获取所有患者列表
2025-08-03 23:10:22 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:10:22 - ==> Parameters: 
2025-08-03 23:10:22 - <==      Total: 5
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 1(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 1(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 2(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 2(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 3(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 3(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 4(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 4(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 5(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:22 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:22 - ==> Parameters: 5(Long)
2025-08-03 23:10:22 - <==      Total: 0
2025-08-03 23:10:30 - Securing OPTIONS /patients/3
2025-08-03 23:10:30 - Securing DELETE /patients/3
2025-08-03 23:10:30 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:30 - ==> Parameters: admin(String)
2025-08-03 23:10:30 - <==      Total: 1
2025-08-03 23:10:30 - Secured DELETE /patients/3
2025-08-03 23:10:30 - 检查权限: PATIENT_DELETE (逻辑: OR)
2025-08-03 23:10:30 - 获取用户权限: 1
2025-08-03 23:10:30 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:30 - ==> Parameters: 1(Long)
2025-08-03 23:10:30 - <==      Total: 59
2025-08-03 23:10:30 - 权限验证通过
2025-08-03 23:10:30 - 删除患者请求: patientId=3
2025-08-03 23:10:30 - 删除患者: 3
2025-08-03 23:10:30 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE id=? AND deleted=0
2025-08-03 23:10:30 - ==> Parameters: 3(Long)
2025-08-03 23:10:30 - <==      Total: 1
2025-08-03 23:10:30 - ==>  Preparing: UPDATE patients SET deleted=1 WHERE id=? AND deleted=0
2025-08-03 23:10:30 - ==> Parameters: 3(Long)
2025-08-03 23:10:30 - <==    Updates: 1
2025-08-03 23:10:30 - 患者删除成功: 3
2025-08-03 23:10:30 - 患者删除成功: 3
2025-08-03 23:10:33 - Securing GET /patients
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:33 - ==> Parameters: admin(String)
2025-08-03 23:10:33 - <==      Total: 1
2025-08-03 23:10:33 - Secured GET /patients
2025-08-03 23:10:33 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:10:33 - 获取用户权限: 1
2025-08-03 23:10:33 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:33 - ==> Parameters: 1(Long)
2025-08-03 23:10:33 - <==      Total: 59
2025-08-03 23:10:33 - 权限验证通过
2025-08-03 23:10:33 - 获取所有患者列表
2025-08-03 23:10:33 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:10:33 - ==> Parameters: 
2025-08-03 23:10:33 - <==      Total: 4
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 1(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 1(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 2(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 2(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 4(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 4(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 5(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:33 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:33 - ==> Parameters: 5(Long)
2025-08-03 23:10:33 - <==      Total: 0
2025-08-03 23:10:42 - Securing OPTIONS /patients/4
2025-08-03 23:10:42 - Securing PUT /patients/4
2025-08-03 23:10:42 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:42 - ==> Parameters: admin(String)
2025-08-03 23:10:42 - <==      Total: 1
2025-08-03 23:10:42 - Secured PUT /patients/4
2025-08-03 23:10:42 - 检查权限: PATIENT_UPDATE (逻辑: OR)
2025-08-03 23:10:42 - 获取用户权限: 1
2025-08-03 23:10:42 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:42 - ==> Parameters: 1(Long)
2025-08-03 23:10:42 - <==      Total: 59
2025-08-03 23:10:42 - 权限验证通过
2025-08-03 23:10:42 - 更新患者请求: patientId=4
2025-08-03 23:10:42 - 更新患者信息: 4
2025-08-03 23:10:42 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE id=? AND deleted=0
2025-08-03 23:10:42 - ==> Parameters: 4(Long)
2025-08-03 23:10:42 - <==      Total: 1
2025-08-03 23:10:42 - ==>  Preparing: UPDATE patients SET patient_number=?, name=?, phone=?, id_card=?, birth_date=?, gender=?, address=?, emergency_contact_name=?, emergency_contact_phone=?, emergency_contact_relation=?, blood_type=?, marital_status=?, occupation=?, ethnicity=?, insurance_type=?, insurance_number=?, remarks=?, is_vip=?, status=?, visit_count=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 23:10:42 - ==> Parameters: P202508030004(String), Joy2(String), 13307981561(String), 360782200103161235(String), 2000-01-03(LocalDate), 男(String), 棠下街道棠东村凌角大街25号111(String), Joy(String), 13307981562(String), fuzi(String), A+(String), 未知(String), ces(String), 汉族(String), 职工医保(String), 13354656757(String), 1243hgmhgmghjmj(String), true(Boolean), 正常(String), 0(Integer), 2025-08-03T22:30:43(LocalDateTime), 2025-08-03T22:30:43(LocalDateTime), 4(Long)
2025-08-03 23:10:42 - <==    Updates: 1
2025-08-03 23:10:42 - 患者信息更新成功: 4
2025-08-03 23:10:42 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:42 - ==> Parameters: 4(Long)
2025-08-03 23:10:42 - <==      Total: 0
2025-08-03 23:10:42 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:42 - ==> Parameters: 4(Long)
2025-08-03 23:10:42 - <==      Total: 0
2025-08-03 23:10:42 - 患者更新成功: 4
2025-08-03 23:10:45 - Securing GET /patients
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:10:45 - ==> Parameters: admin(String)
2025-08-03 23:10:45 - <==      Total: 1
2025-08-03 23:10:45 - Secured GET /patients
2025-08-03 23:10:45 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:10:45 - 获取用户权限: 1
2025-08-03 23:10:45 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:10:45 - ==> Parameters: 1(Long)
2025-08-03 23:10:45 - <==      Total: 59
2025-08-03 23:10:45 - 权限验证通过
2025-08-03 23:10:45 - 获取所有患者列表
2025-08-03 23:10:45 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:10:45 - ==> Parameters: 
2025-08-03 23:10:45 - <==      Total: 4
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 1(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 1(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 2(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 2(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 4(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 4(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 5(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:10:45 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:10:45 - ==> Parameters: 5(Long)
2025-08-03 23:10:45 - <==      Total: 0
2025-08-03 23:11:00 - Securing PUT /patients/4
2025-08-03 23:11:00 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:00 - ==> Parameters: admin(String)
2025-08-03 23:11:00 - <==      Total: 1
2025-08-03 23:11:00 - Secured PUT /patients/4
2025-08-03 23:11:00 - 检查权限: PATIENT_UPDATE (逻辑: OR)
2025-08-03 23:11:00 - 获取用户权限: 1
2025-08-03 23:11:00 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:00 - ==> Parameters: 1(Long)
2025-08-03 23:11:00 - <==      Total: 59
2025-08-03 23:11:00 - 权限验证通过
2025-08-03 23:11:00 - 更新患者请求: patientId=4
2025-08-03 23:11:00 - 更新患者信息: 4
2025-08-03 23:11:00 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE id=? AND deleted=0
2025-08-03 23:11:00 - ==> Parameters: 4(Long)
2025-08-03 23:11:00 - <==      Total: 1
2025-08-03 23:11:00 - ==>  Preparing: UPDATE patients SET patient_number=?, name=?, phone=?, id_card=?, birth_date=?, gender=?, address=?, emergency_contact_name=?, emergency_contact_phone=?, emergency_contact_relation=?, blood_type=?, marital_status=?, occupation=?, ethnicity=?, insurance_type=?, insurance_number=?, remarks=?, is_vip=?, status=?, visit_count=?, created_at=?, updated_at=? WHERE id=? AND deleted=0
2025-08-03 23:11:00 - ==> Parameters: P202508030004(String), Joy2(String), 13307981561(String), 360782200103161235(String), 2000-01-03(LocalDate), 男(String), 棠下街道棠东村凌角大街25号111222(String), Joy(String), 13307981562(String), fuzi(String), A+(String), 未知(String), ces(String), 汉族(String), 职工医保(String), 13354656757(String), 1243hgmhgmghjmj(String), true(Boolean), 正常(String), 0(Integer), 2025-08-03T22:30:43(LocalDateTime), 2025-08-03T22:30:43(LocalDateTime), 4(Long)
2025-08-03 23:11:00 - <==    Updates: 1
2025-08-03 23:11:00 - 患者信息更新成功: 4
2025-08-03 23:11:00 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:00 - ==> Parameters: 4(Long)
2025-08-03 23:11:00 - <==      Total: 0
2025-08-03 23:11:00 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:00 - ==> Parameters: 4(Long)
2025-08-03 23:11:00 - <==      Total: 0
2025-08-03 23:11:00 - 患者更新成功: 4
2025-08-03 23:11:15 - Securing GET /staff
2025-08-03 23:11:15 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:15 - ==> Parameters: admin(String)
2025-08-03 23:11:15 - <==      Total: 1
2025-08-03 23:11:15 - Secured GET /staff
2025-08-03 23:11:15 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 23:11:15 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 23:11:15 - Access denied: Access Denied
2025-08-03 23:11:15 - Securing GET /staff
2025-08-03 23:11:15 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:15 - ==> Parameters: admin(String)
2025-08-03 23:11:15 - <==      Total: 1
2025-08-03 23:11:15 - Secured GET /staff
2025-08-03 23:11:15 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 23:11:15 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 23:11:15 - Access denied: Access Denied
2025-08-03 23:11:17 - Securing OPTIONS /inventory/medicines
2025-08-03 23:11:17 - Securing OPTIONS /inventory/statistics
2025-08-03 23:11:17 - Securing OPTIONS /inventory/medicines
2025-08-03 23:11:17 - Securing OPTIONS /inventory/statistics
2025-08-03 23:11:17 - Securing GET /inventory/medicines
2025-08-03 23:11:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:17 - ==> Parameters: admin(String)
2025-08-03 23:11:17 - Securing GET /inventory/statistics
2025-08-03 23:11:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:17 - <==      Total: 1
2025-08-03 23:11:17 - ==> Parameters: admin(String)
2025-08-03 23:11:17 - Secured GET /inventory/medicines
2025-08-03 23:11:17 - <==      Total: 1
2025-08-03 23:11:17 - Secured GET /inventory/statistics
2025-08-03 23:11:17 - ==>  Preparing: SELECT COUNT(*) FROM medicines WHERE enabled = true AND deleted = 0
2025-08-03 23:11:17 - ==> Parameters: 
2025-08-03 23:11:17 - ==>  Preparing: SELECT * FROM medicines WHERE enabled = ? AND deleted = 0 ORDER BY name
2025-08-03 23:11:17 - ==> Parameters: true(Boolean)
2025-08-03 23:11:17 - <==      Total: 0
2025-08-03 23:11:17 - <==      Total: 1
2025-08-03 23:11:17 - ==>  Preparing: SELECT category, COUNT(*) as count FROM medicines WHERE enabled = true AND deleted = 0 GROUP BY category
2025-08-03 23:11:17 - ==> Parameters: 
2025-08-03 23:11:17 - <==      Total: 0
2025-08-03 23:11:17 - Securing GET /inventory/medicines
2025-08-03 23:11:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:17 - ==>  Preparing: SELECT COALESCE(SUM(inventory_cost), 0) FROM inventory_levels WHERE status = '正常' AND deleted = 0
2025-08-03 23:11:17 - ==> Parameters: admin(String)
2025-08-03 23:11:17 - ==> Parameters: 
2025-08-03 23:11:17 - <==      Total: 1
2025-08-03 23:11:17 - Secured GET /inventory/medicines
2025-08-03 23:11:17 - ==>  Preparing: SELECT * FROM medicines WHERE enabled = ? AND deleted = 0 ORDER BY name
2025-08-03 23:11:17 - ==> Parameters: true(Boolean)
2025-08-03 23:11:17 - <==      Total: 0
2025-08-03 23:11:17 - Unexpected error occurred
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'inventory_cost' in 'field list'
### The error may exist in org/me/joy/clinic/mapper/InventoryLevelMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COALESCE(SUM(inventory_cost), 0) FROM inventory_levels WHERE status = '正常' AND deleted = 0
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'inventory_cost' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy98.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:87)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy116.getTotalInventoryValue(Unknown Source)
	at org.me.joy.clinic.service.impl.InventoryManagementServiceImpl.getTotalInventoryValue(InventoryManagementServiceImpl.java:508)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.me.joy.clinic.service.impl.InventoryManagementServiceImpl$$SpringCGLIB$$0.getTotalInventoryValue(<generated>)
	at org.me.joy.clinic.controller.InventoryManagementController.getInventoryStatistics(InventoryManagementController.java:260)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'inventory_cost' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy147.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at jdk.proxy2/jdk.proxy2.$Proxy145.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at jdk.proxy2/jdk.proxy2.$Proxy144.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 120 common frames omitted
2025-08-03 23:11:17 - Securing GET /inventory/statistics
2025-08-03 23:11:17 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:17 - ==> Parameters: admin(String)
2025-08-03 23:11:17 - <==      Total: 1
2025-08-03 23:11:17 - Secured GET /inventory/statistics
2025-08-03 23:11:17 - ==>  Preparing: SELECT COUNT(*) FROM medicines WHERE enabled = true AND deleted = 0
2025-08-03 23:11:17 - ==> Parameters: 
2025-08-03 23:11:17 - <==      Total: 1
2025-08-03 23:11:17 - ==>  Preparing: SELECT category, COUNT(*) as count FROM medicines WHERE enabled = true AND deleted = 0 GROUP BY category
2025-08-03 23:11:17 - ==> Parameters: 
2025-08-03 23:11:17 - <==      Total: 0
2025-08-03 23:11:17 - ==>  Preparing: SELECT COALESCE(SUM(inventory_cost), 0) FROM inventory_levels WHERE status = '正常' AND deleted = 0
2025-08-03 23:11:17 - ==> Parameters: 
2025-08-03 23:11:17 - Unexpected error occurred
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'inventory_cost' in 'field list'
### The error may exist in org/me/joy/clinic/mapper/InventoryLevelMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COALESCE(SUM(inventory_cost), 0) FROM inventory_levels WHERE status = '正常' AND deleted = 0
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'inventory_cost' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy98.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:87)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy116.getTotalInventoryValue(Unknown Source)
	at org.me.joy.clinic.service.impl.InventoryManagementServiceImpl.getTotalInventoryValue(InventoryManagementServiceImpl.java:508)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.me.joy.clinic.service.impl.InventoryManagementServiceImpl$$SpringCGLIB$$0.getTotalInventoryValue(<generated>)
	at org.me.joy.clinic.controller.InventoryManagementController.getInventoryStatistics(InventoryManagementController.java:260)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'inventory_cost' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy147.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at jdk.proxy2/jdk.proxy2.$Proxy145.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at jdk.proxy2/jdk.proxy2.$Proxy144.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 120 common frames omitted
2025-08-03 23:11:18 - Securing GET /staff
2025-08-03 23:11:18 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:18 - ==> Parameters: admin(String)
2025-08-03 23:11:18 - <==      Total: 1
2025-08-03 23:11:18 - Secured GET /staff
2025-08-03 23:11:18 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 23:11:18 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 23:11:18 - Access denied: Access Denied
2025-08-03 23:11:18 - Securing GET /staff
2025-08-03 23:11:18 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:18 - ==> Parameters: admin(String)
2025-08-03 23:11:18 - <==      Total: 1
2025-08-03 23:11:18 - Secured GET /staff
2025-08-03 23:11:18 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController]
2025-08-03 23:11:18 - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity org.me.joy.clinic.controller.StaffManagementController.getAllStaff(); target is of class [org.me.joy.clinic.controller.StaffManagementController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@37a3a4e5 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('STAFF_VIEW')]
2025-08-03 23:11:18 - Access denied: Access Denied
2025-08-03 23:11:19 - Securing GET /patients
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:19 - ==> Parameters: admin(String)
2025-08-03 23:11:19 - <==      Total: 1
2025-08-03 23:11:19 - Secured GET /patients
2025-08-03 23:11:19 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:11:19 - 获取用户权限: 1
2025-08-03 23:11:19 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:19 - ==> Parameters: 1(Long)
2025-08-03 23:11:19 - <==      Total: 59
2025-08-03 23:11:19 - 权限验证通过
2025-08-03 23:11:19 - 获取所有患者列表
2025-08-03 23:11:19 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:11:19 - ==> Parameters: 
2025-08-03 23:11:19 - <==      Total: 4
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 1(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 1(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 2(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 2(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 4(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 4(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 5(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 5(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - Securing GET /patients
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:19 - ==> Parameters: admin(String)
2025-08-03 23:11:19 - <==      Total: 1
2025-08-03 23:11:19 - Secured GET /patients
2025-08-03 23:11:19 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:11:19 - 获取用户权限: 1
2025-08-03 23:11:19 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:19 - ==> Parameters: 1(Long)
2025-08-03 23:11:19 - <==      Total: 59
2025-08-03 23:11:19 - 权限验证通过
2025-08-03 23:11:19 - 获取所有患者列表
2025-08-03 23:11:19 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:11:19 - ==> Parameters: 
2025-08-03 23:11:19 - <==      Total: 4
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 1(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 1(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 2(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 2(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 4(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 4(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 5(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:19 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:19 - ==> Parameters: 5(Long)
2025-08-03 23:11:19 - <==      Total: 0
2025-08-03 23:11:22 - Securing OPTIONS /appointments
2025-08-03 23:11:22 - Securing OPTIONS /appointments
2025-08-03 23:11:22 - Securing OPTIONS /appointments
2025-08-03 23:11:22 - Securing OPTIONS /appointments
2025-08-03 23:11:22 - Securing GET /appointments
2025-08-03 23:11:22 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:22 - ==> Parameters: admin(String)
2025-08-03 23:11:22 - <==      Total: 1
2025-08-03 23:11:22 - Secured GET /appointments
2025-08-03 23:11:22 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:22 - Securing GET /appointments
2025-08-03 23:11:22 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:22 - ==> Parameters: admin(String)
2025-08-03 23:11:22 - <==      Total: 1
2025-08-03 23:11:22 - Secured GET /appointments
2025-08-03 23:11:22 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:22 - Securing GET /appointments
2025-08-03 23:11:22 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:22 - ==> Parameters: admin(String)
2025-08-03 23:11:22 - <==      Total: 1
2025-08-03 23:11:22 - Secured GET /appointments
2025-08-03 23:11:22 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:22 - Securing GET /appointments
2025-08-03 23:11:22 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:22 - ==> Parameters: admin(String)
2025-08-03 23:11:22 - <==      Total: 1
2025-08-03 23:11:22 - Secured GET /appointments
2025-08-03 23:11:22 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:23 - Securing OPTIONS /registrations
2025-08-03 23:11:23 - Securing OPTIONS /registrations/statistics
2025-08-03 23:11:23 - Securing GET /patients
2025-08-03 23:11:23 - Securing OPTIONS /registrations
2025-08-03 23:11:23 - Securing OPTIONS /registrations/statistics
2025-08-03 23:11:23 - Securing OPTIONS /registrations
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - Securing OPTIONS /registrations
2025-08-03 23:11:23 - Secured GET /patients
2025-08-03 23:11:23 - Securing GET /registrations/statistics
2025-08-03 23:11:23 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:11:23 - Securing GET /registrations
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - 获取用户权限: 1
2025-08-03 23:11:23 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:23 - ==> Parameters: 1(Long)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - Secured GET /registrations/statistics
2025-08-03 23:11:23 - ==>  Preparing: SELECT COUNT(*) FROM registrations WHERE registration_date = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: 2025-08-03(LocalDate)
2025-08-03 23:11:23 - Secured GET /registrations
2025-08-03 23:11:23 - <==      Total: 59
2025-08-03 23:11:23 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:23 - 权限验证通过
2025-08-03 23:11:23 - 获取所有患者列表
2025-08-03 23:11:23 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - Securing GET /registrations
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - <==      Total: 4
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 1(Long)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 1(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 2(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - Secured GET /registrations
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 2(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 4(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:23 - ==> Parameters: 4(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 5(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 5(Long)
2025-08-03 23:11:23 - Securing GET /registrations
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - Securing GET /patients
2025-08-03 23:11:23 - Secured GET /registrations
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - Secured GET /patients
2025-08-03 23:11:23 - Securing GET /registrations
2025-08-03 23:11:23 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:11:23 - 获取用户权限: 1
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - ==> Parameters: 1(Long)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - Secured GET /registrations
2025-08-03 23:11:23 - <==      Total: 59
2025-08-03 23:11:23 - 权限验证通过
2025-08-03 23:11:23 - 获取所有患者列表
2025-08-03 23:11:23 - Unexpected error occurred
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.me.joy.clinic.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:82)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-03 23:11:23 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 4
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 1(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 1(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 2(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 2(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 4(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 4(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 5(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:23 - ==> Parameters: 5(Long)
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - ==>  Preparing: SELECT status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY status
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT department, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY department
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT registration_type, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY registration_type
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT payment_status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY payment_status
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已挂号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY priority DESC, queue_number ASC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已叫号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY called_at ASC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE status = '就诊中' AND registration_date = CURDATE() AND deleted = 0 ORDER BY started_at ASC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE payment_status = '未支付' AND deleted = 0 ORDER BY registration_date DESC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - Securing GET /registrations/statistics
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: admin(String)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - Secured GET /registrations/statistics
2025-08-03 23:11:23 - ==>  Preparing: SELECT COUNT(*) FROM registrations WHERE registration_date = ? AND deleted = 0
2025-08-03 23:11:23 - ==> Parameters: 2025-08-03(LocalDate)
2025-08-03 23:11:23 - <==      Total: 1
2025-08-03 23:11:23 - ==>  Preparing: SELECT status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY status
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT department, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY department
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT registration_type, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY registration_type
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT payment_status, COUNT(*) as count FROM registrations WHERE deleted = 0 GROUP BY payment_status
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已挂号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY priority DESC, queue_number ASC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE status = '已叫号' AND registration_date = CURDATE() AND deleted = 0 ORDER BY called_at ASC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE status = '就诊中' AND registration_date = CURDATE() AND deleted = 0 ORDER BY started_at ASC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:23 - ==>  Preparing: SELECT * FROM registrations WHERE payment_status = '未支付' AND deleted = 0 ORDER BY registration_date DESC
2025-08-03 23:11:23 - ==> Parameters: 
2025-08-03 23:11:23 - <==      Total: 0
2025-08-03 23:11:26 - Securing GET /patients
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:26 - ==> Parameters: admin(String)
2025-08-03 23:11:26 - <==      Total: 1
2025-08-03 23:11:26 - Secured GET /patients
2025-08-03 23:11:26 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:11:26 - 获取用户权限: 1
2025-08-03 23:11:26 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:26 - ==> Parameters: 1(Long)
2025-08-03 23:11:26 - <==      Total: 59
2025-08-03 23:11:26 - 权限验证通过
2025-08-03 23:11:26 - 获取所有患者列表
2025-08-03 23:11:26 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:11:26 - ==> Parameters: 
2025-08-03 23:11:26 - <==      Total: 4
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 1(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 1(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 2(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 2(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 4(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 4(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 5(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 5(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - Securing GET /patients
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:26 - ==> Parameters: admin(String)
2025-08-03 23:11:26 - <==      Total: 1
2025-08-03 23:11:26 - Secured GET /patients
2025-08-03 23:11:26 - 检查权限: PATIENT_VIEW (逻辑: OR)
2025-08-03 23:11:26 - 获取用户权限: 1
2025-08-03 23:11:26 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:26 - ==> Parameters: 1(Long)
2025-08-03 23:11:26 - <==      Total: 59
2025-08-03 23:11:26 - 权限验证通过
2025-08-03 23:11:26 - 获取所有患者列表
2025-08-03 23:11:26 - ==>  Preparing: SELECT id,patient_number,name,phone,id_card,birth_date,gender,address,emergency_contact_name,emergency_contact_phone,emergency_contact_relation,blood_type,marital_status,occupation,ethnicity,insurance_type,insurance_number,remarks,is_vip,status,first_visit_time,last_visit_time,visit_count,created_at,updated_at,deleted FROM patients WHERE deleted=0
2025-08-03 23:11:26 - ==> Parameters: 
2025-08-03 23:11:26 - <==      Total: 4
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 1(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 1(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 2(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 2(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 4(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 4(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM allergy_histories WHERE patient_id = ? AND deleted = 0 ORDER BY severity DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 5(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:26 - ==>  Preparing: SELECT * FROM medical_histories WHERE patient_id = ? AND deleted = 0 ORDER BY CASE history_type WHEN '既往病史' THEN 1 WHEN '家族病史' THEN 2 WHEN '手术史' THEN 3 WHEN '外伤史' THEN 4 WHEN '输血史' THEN 5 WHEN '药物史' THEN 6 ELSE 7 END, diagnosis_date DESC, recorded_time DESC
2025-08-03 23:11:26 - ==> Parameters: 5(Long)
2025-08-03 23:11:26 - <==      Total: 0
2025-08-03 23:11:52 - Securing GET /auth/validate
2025-08-03 23:11:52 - Securing GET /users
2025-08-03 23:11:52 - Securing GET /roles/enabled
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:52 - ==> Parameters: admin(String)
2025-08-03 23:11:52 - ==> Parameters: admin(String)
2025-08-03 23:11:52 - ==> Parameters: admin(String)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - Secured GET /auth/validate
2025-08-03 23:11:52 - Secured GET /roles/enabled
2025-08-03 23:11:52 - Secured GET /users
2025-08-03 23:11:52 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 23:11:52 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 23:11:52 - 获取用户权限: 1
2025-08-03 23:11:52 - 获取用户权限: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:52 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - Securing GET /auth/validate
2025-08-03 23:11:52 - <==      Total: 59
2025-08-03 23:11:52 - <==      Total: 59
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:52 - ==> Parameters: admin(String)
2025-08-03 23:11:52 - 权限验证通过
2025-08-03 23:11:52 - 权限验证通过
2025-08-03 23:11:52 - 获取所有启用的角色
2025-08-03 23:11:52 - 获取所有启用的角色
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - ==> Parameters: 
2025-08-03 23:11:52 - ==> Parameters: 
2025-08-03 23:11:52 - Secured GET /auth/validate
2025-08-03 23:11:52 - <==      Total: 6
2025-08-03 23:11:52 - <==      Total: 3
2025-08-03 23:11:52 - 获取用户角色: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - Securing GET /roles/enabled
2025-08-03 23:11:52 - <==      Total: 2
2025-08-03 23:11:52 - 获取用户角色: 2
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:52 - ==> Parameters: 2(Long)
2025-08-03 23:11:52 - ==> Parameters: admin(String)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:11:52 - ==> Parameters: 2(Long)
2025-08-03 23:11:52 - Secured GET /roles/enabled
2025-08-03 23:11:52 - 检查权限: ROLE_VIEW (逻辑: OR)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - 获取用户角色: 3
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:11:52 - 获取用户权限: 1
2025-08-03 23:11:52 - ==> Parameters: 3(Long)
2025-08-03 23:11:52 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:11:52 - ==> Parameters: 3(Long)
2025-08-03 23:11:52 - <==      Total: 0
2025-08-03 23:11:52 - <==      Total: 59
2025-08-03 23:11:52 - Securing GET /users
2025-08-03 23:11:52 - 权限验证通过
2025-08-03 23:11:52 - 获取所有启用的角色
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM users WHERE username = ? AND deleted = 0
2025-08-03 23:11:52 - ==> Parameters: admin(String)
2025-08-03 23:11:52 - 获取所有启用的角色
2025-08-03 23:11:52 - ==>  Preparing: SELECT * FROM roles WHERE enabled = 1 AND deleted = 0 ORDER BY role_name
2025-08-03 23:11:52 - ==> Parameters: 
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - <==      Total: 6
2025-08-03 23:11:52 - Secured GET /users
2025-08-03 23:11:52 - 检查权限: USER_VIEW (逻辑: OR)
2025-08-03 23:11:52 - 获取用户权限: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT DISTINCT p.* FROM permissions p JOIN role_permissions rp ON p.id = rp.permission_id JOIN roles r ON rp.role_id = r.id AND r.deleted = 0 JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND p.enabled = 1 AND p.deleted = 0
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - <==      Total: 59
2025-08-03 23:11:52 - 权限验证通过
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE deleted=0
2025-08-03 23:11:52 - ==> Parameters: 
2025-08-03 23:11:52 - <==      Total: 3
2025-08-03 23:11:52 - 获取用户角色: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:11:52 - ==> Parameters: 1(Long)
2025-08-03 23:11:52 - <==      Total: 2
2025-08-03 23:11:52 - 获取用户角色: 2
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:11:52 - ==> Parameters: 2(Long)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:11:52 - ==> Parameters: 2(Long)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - 获取用户角色: 3
2025-08-03 23:11:52 - ==>  Preparing: SELECT id,username,password,full_name,email,phone,hire_date,employee_id,department,position,enabled,account_non_expired,account_non_locked,credentials_non_expired,last_login_time,last_login_ip,password_changed_time,failed_login_attempts,locked_time,created_at,updated_at,deleted FROM users WHERE id=? AND deleted=0
2025-08-03 23:11:52 - ==> Parameters: 3(Long)
2025-08-03 23:11:52 - <==      Total: 1
2025-08-03 23:11:52 - ==>  Preparing: SELECT r.* FROM roles r INNER JOIN user_roles ur ON r.id = ur.role_id WHERE ur.user_id = ? AND r.deleted = 0 ORDER BY r.role_name
2025-08-03 23:11:52 - ==> Parameters: 3(Long)
2025-08-03 23:11:52 - <==      Total: 0
